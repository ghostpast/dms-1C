///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОтметитьВыполнениеОбработки(Очередь, Данные, ДополнительныеПараметры) Экспорт
	Если (ПараметрыСеанса.ПараметрыОбработчикаОбновления.ЗапускатьТолькоВГлавномУзле
			И Не БазоваяПодсистемаСерверПовтИсп.СП_ИспользуетсяРИБ())
			Или (Не ПараметрыСеанса.ПараметрыОбработчикаОбновления.ЗапускатьТолькоВГлавномУзле
				И Не БазоваяПодсистемаСерверПовтИсп.СП_ИспользуетсяРИБ("СФильтром"))
			Или ПараметрыСеанса.ПараметрыОбработчикаОбновления.ЗапускатьИВПодчиненномУзлеРИБСФильтрами Тогда
		Возврат;
	КонецЕсли;

	ТипДанных = ТипЗнч(Данные);

	Если ТипДанных = Тип("Массив")
		И Данные.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Если ПараметрыСеанса.ПараметрыОбработчикаОбновления.ЗапускатьТолькоВГлавномУзле Тогда
		УзлыРИБ = БазоваяПодсистемаСерверПовтИсп.СП_УзлыРИБ();
	Иначе
		УзлыРИБ = БазоваяПодсистемаСерверПовтИсп.СП_УзлыРИБ("СФильтром");
	КонецЕсли;

	Если УзлыРИБ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеПараметры.ЭтоДвижения
		Или ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений Тогда
		ИдентификаторОбъектаМетаданных = Справочники.ИдентификаторыОбъектовМетаданных.ИдентификаторОбъектаМетаданных(ДополнительныеПараметры.ПолноеИмяРегистра, Истина);
	Иначе
		Если ТипДанных = Тип("Массив") Тогда
			ИдентификаторОбъектаМетаданных = Неопределено;
		Иначе
			ИдентификаторОбъектаМетаданных = Справочники.ИдентификаторыОбъектовМетаданных.ИдентификаторОбъектаМетаданных(ТипДанных, Истина);
		КонецЕсли;
	КонецЕсли;

	НаборДанных = СоздатьНаборЗаписей();

	Если ЗначениеЗаполнено(ИдентификаторОбъектаМетаданных) Тогда
		НаборДанных.Отбор.ОбъектМетаданных.Установить(ИдентификаторОбъектаМетаданных);
	КонецЕсли;

	НаборДанных.Отбор.Очередь.Установить(Очередь);

	Если ДополнительныеПараметры.ЭтоДвижения Тогда
		ДобавитьДанныеВНабор(УзлыРИБ, НаборДанных, Данные);
	ИначеЕсли ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений Тогда
		Для Каждого ЭлементДанных Из Данные Цикл
			СтруктураЗначенийИзмерений = Новый Структура;
			Идентификатор              = Новый УникальныйИдентификатор;

			НаборДанных.Отбор.КлючУникальности.Установить(Идентификатор);

			Для Каждого ЭлементОтбора Из Данные.Колонки Цикл
				СтруктураЗначенийИзмерений.Вставить(ЭлементОтбора.Имя, ЭлементДанных[ЭлементОтбора.Имя]);
			КонецЦикла;

			Для Каждого УзелРИБ Из УзлыРИБ Цикл
				НоваяСтрока										= НаборДанных.Добавить();
				НоваяСтрока.УзелПланаОбмена                     = УзелРИБ.Значение;
				НоваяСтрока.ОбъектМетаданных                    = ИдентификаторОбъектаМетаданных;
				НоваяСтрока.КлючУникальности                    = Идентификатор;
				НоваяСтрока.Очередь                             = Очередь;
				НоваяСтрока.ЗначенияОтборовНезависимогоРегистра = Новый ХранилищеЗначения(СтруктураЗначенийИзмерений, Новый СжатиеДанных(9));
			КонецЦикла;

			ЗаписатьНаборИсключивСтандартнуюРегистрациюИзменений(НаборДанных, УзлыРИБ);

			НаборДанных = СоздатьНаборЗаписей();
			Если ЗначениеЗаполнено(ИдентификаторОбъектаМетаданных) Тогда
				НаборДанных.Отбор.ОбъектМетаданных.Установить(ИдентификаторОбъектаМетаданных);
			КонецЕсли;
			НаборДанных.Отбор.Очередь.Установить(Очередь);
		КонецЦикла;
	Иначе
		Если ТипЗнч(Данные) <> Тип("Массив") Тогда
			ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипДанных);
			Если Метаданные.Константы.Содержит(ОбъектМетаданных) Тогда
				Возврат;
			КонецЕсли;

			Если Метаданные.РегистрыСведений.Содержит(ОбъектМетаданных)
				И ОбъектМетаданных.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.Независимый Тогда

				СтруктураЗначенийИзмерений	= Новый Структура;
				Идентификатор				= Новый УникальныйИдентификатор;

				НаборДанных.Отбор.КлючУникальности.Установить(Идентификатор);

				Для Каждого ЭлементОтбора Из Данные.Отбор Цикл
					СтруктураЗначенийИзмерений.Вставить(ЭлементОтбора.Имя, ЭлементОтбора.Значение);
				КонецЦикла;

				Для Каждого УзелРИБ Из УзлыРИБ Цикл
					НоваяСтрока										= НаборДанных.Добавить();
					НоваяСтрока.УзелПланаОбмена                     = УзелРИБ.Значение;
					НоваяСтрока.ОбъектМетаданных                    = ИдентификаторОбъектаМетаданных;
					НоваяСтрока.КлючУникальности                    = Идентификатор;
					НоваяСтрока.Очередь                             = Очередь;
					НоваяСтрока.ЗначенияОтборовНезависимогоРегистра = Новый ХранилищеЗначения(СтруктураЗначенийИзмерений, Новый СжатиеДанных(9));
				КонецЦикла;

				ЗаписатьНаборИсключивСтандартнуюРегистрациюИзменений(НаборДанных, УзлыРИБ);

				Возврат;
			КонецЕсли;

			ДобавитьДанныеВНабор(УзлыРИБ, НаборДанных, Данные, ОбъектМетаданных);
		Иначе
			ДобавитьДанныеВНабор(УзлыРИБ, НаборДанных, Данные, , Очередь);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьДанныеВНабор(УзлыРИБ, НаборДанных, Данные, ОбъектМетаданных = Неопределено, Очередь = Неопределено)
	Если ТипЗнч(Данные) = Тип("Массив") Тогда
		Для Каждого ЭлементДанных Из Данные Цикл
			НаборДанных = СоздатьНаборЗаписей();
			НаборДанных.Отбор.Данные.Установить(ЭлементДанных);
			НаборДанных.Отбор.Очередь.Установить(Очередь);
			НаборДанных.Отбор.ОбъектМетаданных.Установить(Справочники.ИдентификаторыОбъектовМетаданных.ИдентификаторОбъектаМетаданных(ТипЗнч(ЭлементДанных), Истина));

			Для Каждого УзелРИБ Из УзлыРИБ Цикл
				НоваяСтрока						= НаборДанных.Добавить();
				НоваяСтрока.УзелПланаОбмена		= УзелРИБ.Значение;
				НоваяСтрока.ОбъектМетаданных	= НаборДанных.Отбор.ОбъектМетаданных.Значение;
				НоваяСтрока.Данные				= ЭлементДанных;
				НоваяСтрока.Очередь				= НаборДанных.Отбор.Очередь.Значение;
			КонецЦикла;

			ЗаписатьНаборИсключивСтандартнуюРегистрациюИзменений(НаборДанных, УзлыРИБ);
		КонецЦикла;
	Иначе
		Значение = Неопределено;

		Если ОбъектМетаданных = Неопределено Тогда
			ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Данные));
		КонецЕсли;

		Если БазоваяПодсистемаСервер.ОН_ЭтоСсылка(ТипЗнч(Данные)) Тогда
			Значение = Данные;
		ИначеЕсли БазоваяПодсистемаСервер.ОН_ЭтоОбъектСсылочногоТипа(ОбъектМетаданных) Тогда
			Значение = Данные.Ссылка;
		Иначе
			Значение = Данные.Отбор.Регистратор.Значение;
		КонецЕсли;

		НаборДанных.Отбор.Данные.Установить(Значение);

		Если Не НаборДанных.Отбор.ОбъектМетаданных.Использование
			Или Не ЗначениеЗаполнено(НаборДанных.Отбор.ОбъектМетаданных.Значение) Тогда
			НаборДанных.Отбор.ОбъектМетаданных.Установить(Справочники.ИдентификаторыОбъектовМетаданных.ИдентификаторОбъектаМетаданных(ТипЗнч(Значение), Истина));
		КонецЕсли;

		Для Каждого УзелРИБ Из УзлыРИБ Цикл
			НоваяСтрока						= НаборДанных.Добавить();
			НоваяСтрока.УзелПланаОбмена		= УзелРИБ.Значение;
			НоваяСтрока.ОбъектМетаданных	= НаборДанных.Отбор.ОбъектМетаданных.Значение;
			НоваяСтрока.Данные				= Значение;
			НоваяСтрока.Очередь				= НаборДанных.Отбор.Очередь.Значение;
		КонецЦикла;

		ЗаписатьНаборИсключивСтандартнуюРегистрациюИзменений(НаборДанных, УзлыРИБ);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаписатьНаборИсключивСтандартнуюРегистрациюИзменений(НаборДанных, УзлыРИБ)
	// Записываем набор, заменяя стандартную логику регистрации собственной.
	Для Каждого Элемент Из НаборДанных Цикл
		ЗаписываемыйНабор = СоздатьНаборЗаписей();
		Для Каждого ЭлементОтбора Из НаборДанных.Отбор Цикл
			ЗаписываемыйНабор.Отбор[ЭлементОтбора.Имя].Установить(ЭлементОтбора.Значение);
		КонецЦикла;
		ЗаписываемыйНабор.Отбор.УзелПланаОбмена.Установить(Элемент.УзелПланаОбмена);

		ЗаполнитьЗначенияСвойств(ЗаписываемыйНабор.Добавить(), Элемент);

		ЗаписываемыйНабор.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
		ЗаписываемыйНабор.Записать();
	КонецЦикла;
	РегистрируемыйНабор = СоздатьНаборЗаписей();
	Для Каждого ЭлементОтбора Из НаборДанных.Отбор Цикл
		РегистрируемыйНабор.Отбор[ЭлементОтбора.Имя].Установить(ЭлементОтбора.Значение);
	КонецЦикла;

	Для Каждого ЭлементСписка Из УзлыРИБ Цикл
		УзелРИБ = ЭлементСписка.Значение;
		РегистрируемыйНабор.Отбор.УзелПланаОбмена.Установить(УзелРИБ);
		ПланыОбмена.ЗарегистрироватьИзменения(УзелРИБ, РегистрируемыйНабор);
	КонецЦикла;
КонецПроцедуры

#КонецЕсли
