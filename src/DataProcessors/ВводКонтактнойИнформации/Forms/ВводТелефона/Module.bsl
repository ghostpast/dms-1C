///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("ВозвращатьСписокЗначений", ВозвращатьСписокЗначений);

	// Разбор параметров в реквизиты.
	Если ТипЗнч(Параметры.ВидКонтактнойИнформации) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		ВидКонтактнойИнформации = Параметры.ВидКонтактнойИнформации;
	КонецЕсли;

	СтруктураВидКонтактнойИнформации	= КонтактнаяИнформацияСервер.сУКИ_СтруктураВидаКонтактнойИнформации(Параметры.ВидКонтактнойИнформации);
	ТипКонтактнойИнформации				= СтруктураВидКонтактнойИнформации.Тип;

	ПроверятьКорректность	= СтруктураВидКонтактнойИнформации.ПроверятьКорректность;
	Заголовок				= ?(ПустаяСтрока(Параметры.Заголовок), Строка(ВидКонтактнойИнформации), Параметры.Заголовок);
	ЭтоНовый				= Ложь;

	ЗначенияПолей = ОпределитьЗначениеАдреса(Параметры);

	Если Метаданные.Обработки.Найти("РасширенныйВводКонтактнойИнформации") <> Неопределено Тогда
		ПодсказкиПриВводеТелефона = Обработки["РасширенныйВводКонтактнойИнформации"].ПодсказкиПриВводеТелефона();
		Элементы.КодСтраны.ПодсказкаВвода = ПодсказкиПриВводеТелефона.КодСтраны;
		Элементы.КодГорода.ПодсказкаВвода = ПодсказкиПриВводеТелефона.КодГорода;
		Элементы.НомерТелефона.ПодсказкаВвода = ПодсказкиПриВводеТелефона.НомерТелефона;		

		ИспользоватьДополнительныеПроверки = Истина;
	КонецЕсли;

	Если ПустаяСтрока(ЗначенияПолей) Тогда
		Данные = КонтактнаяИнформацияКлиентСервер.РСА_ОписаниеНовойКонтактнойИнформации(ТипКонтактнойИнформации);
		ЭтоНовый = Истина;
	ИначеЕсли ТипЗнч(ЗначенияПолей) = Тип("Строка") И СтрНачинаетсяС(СокрЛ(ЗначенияПолей), "{") Тогда
		Данные = КонтактнаяИнформацияСервер.сУКИ_JSONВКонтактнуюИнформациюПоПолям(ЗначенияПолей, Перечисления.ТипыКонтактнойИнформации.Телефон);
	Иначе
		Если ТипЗнч(ЗначенияПолей) = Тип("Строка") И СтрНачинаетсяС(СокрЛ(ЗначенияПолей), "<") Тогда
			РезультатыЧтения = Новый Структура;
			КонтактнаяИнформация = КонтактнаяИнформацияСервер.сУКИ_КонтактнаяИнформацияИзXML(ЗначенияПолей, ТипКонтактнойИнформации, РезультатыЧтения);
			Если РезультатыЧтения.Свойство("ТекстОшибки") Тогда
				// Распознали с ошибками, сообщим при открытии.
				ТекстПредупрежденияПриОткрытии		= РезультатыЧтения.ТекстОшибки;
				КонтактнаяИнформация.Представление	= Параметры.Представление;
			КонецЕсли;
		Иначе
			КонтактнаяИнформация = КонтактнаяИнформацияСервер.сУКИ_ДесериализацияТелефонаФакса(ЗначенияПолей, Параметры.Представление, ТипКонтактнойИнформации);
		КонецЕсли;

		Данные = КонтактнаяИнформацияСервер.сУКИ_КонтактнаяИнформацияВСтруктуруJSON(КонтактнаяИнформация, ТипКонтактнойИнформации);
	КонецЕсли;

	ЗначениеРеквизитовПоКонтактнойИнформации(Данные);

	Элементы.Добавочный.Видимость			= СтруктураВидКонтактнойИнформации.ТелефонCДобавочнымНомером;
	Элементы.ОчиститьТелефон.Доступность	= Не Параметры.ТолькоПросмотр;

	Коды = БазоваяПодсистемаСервер.ОН_ХранилищеЗагрузить(ХранилищеОбщихНастроек, "Обработка.ВводКонтактнойИнформации.Форма.ВводТелефона", "КодыСтраныИГорода", Неопределено, Неопределено, Неопределено);
	Если ТипЗнч(Коды) = Тип("Структура") Тогда
		Если ЭтоНовый Тогда
			Коды.Свойство("КодСтраны", КодСтраны);
			Коды.Свойство("КодГорода", КодГорода);
		КонецЕсли;

		Если Коды.Свойство("СписокКодовГорода") Тогда
			Элементы.КодГорода.СписокВыбора.ЗагрузитьЗначения(Коды.СписокКодовГорода);
		КонецЕсли;
	КонецЕсли;

	Если СтруктураВидКонтактнойИнформации.ХранитьИсториюИзменений Тогда
		Если Параметры.Свойство("КонтактнаяИнформацияОписаниеДополнительныхРеквизитов") Тогда
			Для каждого СтрокаКИ Из Параметры.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов Цикл
				НоваяСтрока = КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаКИ);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	Если БазоваяПодсистемаСервер.ОН_ЭтоМобильныйКлиент() Тогда
		ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Авто;

		БазоваяПодсистемаКлиентСервер.ОН_УстановитьСвойствоЭлементаФормы(Элементы, "Представление", "ПодсказкаВвода", "Представление");
		БазоваяПодсистемаКлиентСервер.ОН_УстановитьСвойствоЭлементаФормы(Элементы, "КомандаОК", "Картинка", БиблиотекаКартинок.ЗаписатьИЗакрыть);
		БазоваяПодсистемаКлиентСервер.ОН_УстановитьСвойствоЭлементаФормы(Элементы, "КомандаОК", "Отображение", ОтображениеКнопки.Картинка);
		БазоваяПодсистемаКлиентСервер.ОН_УстановитьСвойствоЭлементаФормы(Элементы, "Отмена", "Видимость", Ложь);

		БазоваяПодсистемаКлиентСервер.ОН_УстановитьСвойствоЭлементаФормы(Элементы, "КодСтраны", "ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Лево);
		БазоваяПодсистемаКлиентСервер.ОН_УстановитьСвойствоЭлементаФормы(Элементы, "КодГорода", "ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Лево);
		БазоваяПодсистемаКлиентСервер.ОН_УстановитьСвойствоЭлементаФормы(Элементы, "НомерТелефона", "ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Лево);
		БазоваяПодсистемаКлиентСервер.ОН_УстановитьСвойствоЭлементаФормы(Элементы, "Добавочный", "ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Лево);

		Если Элементы.КодГорода.СписокВыбора.Количество() < 2 Тогда
			Элементы.КодГорода.КнопкаВыпадающегоСписка = Неопределено;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ПустаяСтрока(ТекстПредупрежденияПриОткрытии) Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПредупредитьПослеОткрытияФормы", 0.1, Истина);
	КонецЕсли;

	Если ЗначениеЗаполнено(КодГорода) Тогда
		ТекущийЭлемент = Элементы.КодГорода;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ПодтвердитьИЗакрыть", ЭтотОбъект);
	БазоваяПодсистемаКлиент.ОН_ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
КонецПроцедуры

&НаКлиенте
Процедура КодСтраныПриИзменении(Элемент)
	ЗаполнитьПредставлениеТелефона();
КонецПроцедуры

&НаКлиенте
Процедура КодГородаПриИзменении(Элемент)
	Если ИспользоватьДополнительныеПроверки Тогда
		КонтактнаяИнформацияКлиент.РСА_ПоказатьПодсказкуКорректностиКодовСтраныИГорода(КодСтраны, КодГорода);
	КонецЕсли;

	ЗаполнитьПредставлениеТелефона();
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефонаПриИзменении(Элемент)
	ЗаполнитьПредставлениеТелефона();
КонецПроцедуры

&НаКлиенте
Процедура ДобавочныйПриИзменении(Элемент)
	ЗаполнитьПредставлениеТелефона();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	ПодтвердитьИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТелефон(Команда)
	ОчиститьТелефонСервер();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПредупредитьПослеОткрытияФормы()
	БазоваяПодсистемаКлиентСервер.сОН_СообщитьПользователю(ТекстПредупрежденияПриОткрытии, Неопределено, "", "", Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	// При немодифицированности работает "отмена".

	Если Модифицированность Тогда
		ЕстьОшибкиЗаполнения = Ложь;
		// Смотрим, надо ли проверять на корректность.
		Если ПроверятьКорректность Тогда
			СписокОшибок			= ОшибкиЗаполненияТелефона();
			ЕстьОшибкиЗаполнения	= СписокОшибок.Количество() > 0;
		КонецЕсли;
		Если ЕстьОшибкиЗаполнения Тогда
			СообщитьОбОшибкахЗаполнения(СписокОшибок);

			Возврат;
		КонецЕсли;

		Результат = РезультатВыбора();

		СброситьМодифицированностьПриВыборе();
		ОповеститьОВыборе(Результат);
	ИначеЕсли Комментарий <> КопияКомментария Тогда
		// Изменен только комментарий, пробуем вернуть обновленное.
		Результат = РезультатВыбораТолькоКомментария();

		СброситьМодифицированностьПриВыборе();
		ОповеститьОВыборе(Результат);
	Иначе
		Результат = Неопределено;
	КонецЕсли;

	Если (МодальныйРежим Или ЗакрыватьПриВыборе) И Открыта() Тогда
		СброситьМодифицированностьПриВыборе();
		Закрыть(Результат);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СброситьМодифицированностьПриВыборе()
	Модифицированность = Ложь;
	КопияКомментария   = Комментарий;
КонецПроцедуры

&НаСервере
Функция РезультатВыбора()
	Результат = Новый Структура;

	СписокВыбора	= Элементы.КодГорода.СписокВыбора;
	ЭлементСписка	= СписокВыбора.НайтиПоЗначению(КодГорода);
	Если ЭлементСписка = Неопределено Тогда
		СписокВыбора.Вставить(0, КодГорода);
		Если СписокВыбора.Количество() > 10 Тогда
			СписокВыбора.Удалить(10);
		КонецЕсли;
	Иначе
		Индекс = СписокВыбора.Индекс(ЭлементСписка);
		Если Индекс <> 0 Тогда
			СписокВыбора.Сдвинуть(Индекс, -Индекс);
		КонецЕсли;
	КонецЕсли;

	Коды = Новый Структура("КодСтраны, КодГорода, СписокКодовГорода", КодСтраны, КодГорода, СписокВыбора.ВыгрузитьЗначения());
	БазоваяПодсистемаСервер.ОН_ХранилищеСохранить(ХранилищеОбщихНастроек, "Обработка.ВводКонтактнойИнформации.Форма.ВводТелефона", "КодыСтраныИГорода", Коды, "Коды страны и города", Неопределено, Ложь);

	КонтактнаяИнформация	= КонтактнаяИнформацияПоЗначениюРеквизитов();

	ДанныеВыбора			= КонтактнаяИнформацияСервер.сУКИ_СтруктураВСтрокуJSON(КонтактнаяИнформация);

	Результат.Вставить("Вид",													ВидКонтактнойИнформации);
	Результат.Вставить("Тип",													ТипКонтактнойИнформации);
	Результат.Вставить("КонтактнаяИнформация",									КонтактнаяИнформацияСервер.УКИ_КонтактнаяИнформацияВXML(ДанныеВыбора, КонтактнаяИнформация.Value, ТипКонтактнойИнформации));
	Результат.Вставить("Значение",												ДанныеВыбора);
	Результат.Вставить("Представление",											КонтактнаяИнформация.Value);
	Результат.Вставить("Комментарий",											КонтактнаяИнформация.Comment);
	Результат.Вставить("ВВидеГиперссылки",										Ложь);
	Результат.Вставить("КонтактнаяИнформацияОписаниеДополнительныхРеквизитов",	КонтактнаяИнформацияОписаниеДополнительныхРеквизитов);

	Возврат Результат
КонецФункции

&НаСервере
Функция РезультатВыбораТолькоКомментария()
	КонтактнаяИнфо = ОпределитьЗначениеАдреса(Параметры);
	Если ПустаяСтрока(КонтактнаяИнфо) Тогда
		КонтактнаяИнфо = КонтактнаяИнформацияСервер.сУКИ_ДесериализацияТелефонаФакса("", "", ТипКонтактнойИнформации);

		КонтактнаяИнформацияСервер.УКИ_УстановитьКомментарийКонтактнойИнформации(КонтактнаяИнфо, Комментарий);
		КонтактнаяИнфо = КонтактнаяИнформацияСервер.УКИ_КонтактнаяИнформацияВXML(КонтактнаяИнфо);
	ИначеЕсли ТипЗнч(КонтактнаяИнфо) = Тип("Строка") И СтрНачинаетсяС(СокрЛ(КонтактнаяИнфо), "<") Тогда
		КонтактнаяИнформацияСервер.УКИ_УстановитьКомментарийКонтактнойИнформации(КонтактнаяИнфо, Комментарий);
	КонецЕсли;

	Возврат Новый Структура("КонтактнаяИнформация, Представление, Комментарий", КонтактнаяИнфо, Параметры.Представление, Комментарий);
КонецФункции

&НаСервере
Процедура ЗначениеРеквизитовПоКонтактнойИнформации(РедактируемаяИнформация)
	// Общие реквизиты
	Представление = РедактируемаяИнформация.Value;
	Комментарий   = РедактируемаяИнформация.Comment;

	// Копия комментария для анализа измененности.
	КопияКомментария = Комментарий;

	КодСтраны     = РедактируемаяИнформация.CountryCode;
	КодГорода     = РедактируемаяИнформация.AreaCode;
	НомерТелефона = РедактируемаяИнформация.Number;
	Добавочный    = РедактируемаяИнформация.ExtNumber;
КонецПроцедуры

// Возвращает XTDO объект типа "Контактная информация" по значению реквизитов.
&НаСервере
Функция КонтактнаяИнформацияПоЗначениюРеквизитов()
	Результат = КонтактнаяИнформацияКлиентСервер.УКИ_ОписаниеНовойКонтактнойИнформации(ТипКонтактнойИнформации);

	Результат.CountryCode = КодСтраны;
	Результат.AreaCode    = КодГорода;
	Результат.Number      = НомерТелефона;
	Результат.ExtNumber   = Добавочный;
	Результат.Value       = КонтактнаяИнформацияКлиентСервер.УКИ_СформироватьПредставлениеТелефона(КодСтраны, КодГорода, НомерТелефона, Добавочный, "");
	Результат.Comment     = Комментарий;

	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПредставлениеТелефона()
	ПодключитьОбработчикОжидания("ЗаполнитьПредставлениеТелефонаСейчас", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПредставлениеТелефонаСейчас()
	Представление = КонтактнаяИнформацияКлиентСервер.УКИ_СформироватьПредставлениеТелефона(КодСтраны, КодГорода, НомерТелефона, Добавочный, "");
КонецПроцедуры

&НаКлиенте
Функция ОшибкиЗаполненияТелефона()
	СписокОшибок				= Новый СписокЗначений;
	ПолныйНомерТелефона			= КодСтраны + КодГорода + НомерТелефона;
	НомерТелефонаТолькоЦифры	= КонтактнаяИнформацияКлиент.УКИ_ОставитьТолькоЦифрыВСтроке(ПолныйНомерТелефона);

	Если СтрДлина(НомерТелефонаТолькоЦифры) > 15 Тогда
		СписокОшибок.Добавить("НомерТелефона", "Номер телефона слишком длинный");
	КонецЕсли;

	Если НомерТелефонаСодержитНедопустимыеСимволы(ПолныйНомерТелефона) Тогда
		СписокОшибок.Добавить("НомерТелефона", "Номер телефона содержит недопустимые символы");
	КонецЕсли;

	Если ИспользоватьДополнительныеПроверки Тогда
		КонтактнаяИнформацияКлиент.РСА_ПроверитьКорректностьКодовСтраныИГорода(КодСтраны, КодГорода, НомерТелефона, СписокОшибок);
	КонецЕсли;

	Возврат СписокОшибок;
КонецФункции

&НаКлиенте
Процедура СообщитьОбОшибкахЗаполнения(СписокОшибок)
	Если СписокОшибок.Количество()=0 Тогда
		ПоказатьПредупреждение(, "Телефон введен корректно.");
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();

	// Значение - XPath, представление - описание ошибки.
	Для Каждого Элемент Из СписокОшибок Цикл
		БазоваяПодсистемаКлиентСервер.сОН_СообщитьПользователю(Элемент.Представление,,, ПутьКДаннымФормыПоПутиXPath(Элемент.Значение), Ложь);
	КонецЦикла;
КонецПроцедуры    

&НаКлиенте 
Функция ПутьКДаннымФормыПоПутиXPath(ПутьXPath) 
	Возврат ПутьXPath;
КонецФункции

&НаСервере
Процедура ОчиститьТелефонСервер()
	КодСтраны     = "";
	КодГорода     = "";
	НомерТелефона = "";
	Добавочный    = "";
	Комментарий   = "";
	Представление = "";

	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Функция НомерТелефонаСодержитНедопустимыеСимволы(Знач СтрокаПроверки)
	СписокДопустимыхСимволов = "+-.,() wp1234567890";

	Возврат СтрРазделить(СтрокаПроверки, СписокДопустимыхСимволов, Ложь).Количество() > 0;
КонецФункции

&НаСервере
Функция ОпределитьЗначениеАдреса(Параметры)
	Если Параметры.Свойство("Значение") Тогда
		Если ПустаяСтрока(Параметры.Значение) И ЗначениеЗаполнено(Параметры.ЗначенияПолей) Тогда
			ЗначенияПолей = Параметры.ЗначенияПолей;
		Иначе
			ЗначенияПолей = Параметры.Значение;
		КонецЕсли;
	Иначе
		ЗначенияПолей = Параметры.ЗначенияПолей;
	КонецЕсли;

	Возврат ЗначенияПолей;
КонецФункции
