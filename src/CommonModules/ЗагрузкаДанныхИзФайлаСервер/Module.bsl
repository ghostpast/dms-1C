///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

Функция ЗДФ_НастройкиЗагрузкиДанных() Экспорт
	ПараметрыЗагрузки = Новый Структура;
	ПараметрыЗагрузки.Вставить("СоздаватьНовые", Ложь);
	ПараметрыЗагрузки.Вставить("ОбновлятьСуществующие", Ложь);

	Возврат ПараметрыЗагрузки;
КонецФункции

Функция ЗДФ_ОписаниеЗагружаемыхДанныхДляСправочников(ЗагружаемыеДанные, ОписаниеТипаОбъектаСопоставления, ЗаголовокКолонкиОбъектаСопоставления) Экспорт
	ЗагружаемыеДанные.Колонки.Добавить("Идентификатор",					Новый ОписаниеТипов("Число"), "п/п");
	ЗагружаемыеДанные.Колонки.Добавить("ОбъектСопоставления",			ОписаниеТипаОбъектаСопоставления, ЗаголовокКолонкиОбъектаСопоставления);
	ЗагружаемыеДанные.Колонки.Добавить("РезультатСопоставленияСтроки",	Новый ОписаниеТипов("Строка"), "Результат");
	ЗагружаемыеДанные.Колонки.Добавить("ОписаниеОшибки",				Новый ОписаниеТипов("Строка"), "Причина");
	ЗагружаемыеДанные.Колонки.Добавить("СписокНеоднозначностей",		Новый ОписаниеТипов("СписокЗначений"), "СписокНеоднозначностей");

	Возврат ЗагружаемыеДанные;
КонецФункции

Функция ЗДФ_НовыйСписокНеоднозначностей() Экспорт
	СписокНеоднозначностей = Новый ТаблицаЗначений;
	СписокНеоднозначностей.Колонки.Добавить("Идентификатор");
	СписокНеоднозначностей.Колонки.Добавить("Колонка");

	Возврат СписокНеоднозначностей;
КонецФункции

Процедура ЗДФ_ДобавитьСтатистическуюИнформацию(ИмяОперации, Значение = 1, Комментарий = "") Экспорт
	// Зарезервировано для новых подсистем
КонецПроцедуры

Функция ЗДФ_ПараметрыЗагрузкиИзФайла(ИмяОбъектаСопоставления) Экспорт
	МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ИмяОбъектаСопоставления);

	ОбязательныеКолонкиМакета = Новый Массив;
	Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		Если Реквизит.ПроверкаЗаполнения=ПроверкаЗаполнения.ВыдаватьОшибку Тогда
			ОбязательныеКолонкиМакета.Добавить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;

	ПараметрыПоУмолчанию = Новый Структура;
	ПараметрыПоУмолчанию.Вставить("Заголовок",				МетаданныеОбъекта.Представление());
	ПараметрыПоУмолчанию.Вставить("ОбязательныеКолонки",	ОбязательныеКолонкиМакета);
	ПараметрыПоУмолчанию.Вставить("ТипДанныхКолонки",		Новый Соответствие);
	ПараметрыПоУмолчанию.Вставить("ТипЗагрузки",			"");
	ПараметрыПоУмолчанию.Вставить("ПолноеИмяОбъекта",		ИмяОбъектаСопоставления);
	ПараметрыПоУмолчанию.Вставить("ПредставлениеОбъекта",	МетаданныеОбъекта.Представление());

	Возврат ПараметрыПоУмолчанию;
КонецФункции
