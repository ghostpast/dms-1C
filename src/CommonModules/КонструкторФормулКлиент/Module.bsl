///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область КонструкторФормул

Процедура КФ_НачатьРедактированиеФормулы(Параметры, ОбработчикЗавершения) Экспорт
	ОткрытьФорму("Обработка.КонструкторФормул.Форма.РедактированиеФормулы", Параметры, , , , , ОбработчикЗавершения);
КонецПроцедуры

Процедура КФ_СписокПолейПередРазворачиванием(Форма, Элемент, Строка, Отказ) Экспорт
	Элемент.ТекущаяСтрока	= Строка;
	КоллекцияЭлементов		= Форма[Элемент.Имя].НайтиПоИдентификатору(Строка).ПолучитьЭлементы();
	Если КоллекцияЭлементов.Количество() > 0 И КоллекцияЭлементов[0].Поле = Неопределено Тогда
		Отказ = Истина;
		Форма.ПодключитьОбработчикОжидания("Подключаемый_РазвернутьТекущийЭлементСпискаПолей", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

Процедура КФ_РазвернутьТекущийЭлементСпискаПолей(Форма) Экспорт
	СписокПолей			= Форма.ТекущийЭлемент;
	ИдентификаторСтроки	= СписокПолей.ТекущаяСтрока;

	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ИдентификаторСтроки",	ИдентификаторСтроки);
	ПараметрыЗаполнения.Вставить("ИмяСписка",			СписокПолей.Имя);

	Форма.Подключаемый_ЗаполнитьСписокДоступныхПолей(ПараметрыЗаполнения);
	СписокПолей.Развернуть(ИдентификаторСтроки);
КонецПроцедуры

Процедура КФ_СписокПолейНачалоПеретаскивания(Форма, Элемент, ПараметрыПеретаскивания, Выполнение) Экспорт
	Реквизит							= Форма[Элемент.Имя].НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение);
	ПараметрыПеретаскивания.Значение	= "[" + Реквизит.ПредставлениеПутиКДанным + "]";
КонецПроцедуры

Функция КФ_ВыбранноеПолеВСпискеПолей(Форма, ИмяСпискаПолей = Неопределено) Экспорт
	Если Форма.ПодключенныеСпискиПолей.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;

	Если ИмяСпискаПолей = Неопределено Тогда
		СписокПолей		= Форма.ТекущийЭлемент; // ТаблицаФормы
		ИмяСпискаПолей	= СписокПолей.Имя;
		Если КонструкторФормулКлиентСервер.КФ_НастройкиСпискаПолей(Форма, ИмяСпискаПолей)= Неопределено Тогда
			ИмяСпискаПолей = Форма.ПодключенныеСпискиПолей[0].ИмяСпискаПолей;
		КонецЕсли;
	КонецЕсли;

	СписокПолей		= Форма.Элементы[ИмяСпискаПолей];
	ТекущиеДанные	= СписокПолей.ТекущиеДанные;

	Если ТекущиеДанные = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	Возврат КФ_ОписаниеВыбранногоПоля(ТекущиеДанные);
КонецФункции

Процедура КФ_СтрокаПоискаИзменениеТекстаРедактирования(Форма, Элемент, Текст, СтандартнаяОбработка) Экспорт
	Форма[Элемент.Имя] = Текст;
	Форма.ОтключитьОбработчикОжидания("Подключаемый_ВыполнитьПоискВСпискеПолей");
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ВыполнитьПоискВСпискеПолей", 0.5, Истина);
КонецПроцедуры

Функция КФ_ОписаниеВыбранногоПоля(Поле)
	Результат = Новый Структура;
	Результат.Вставить("Имя");
	Результат.Вставить("Заголовок");
	Результат.Вставить("ПутьКДанным");
	Результат.Вставить("ПредставлениеПутиКДанным");
	Результат.Вставить("Тип");
	Результат.Вставить("Родитель");

	ЗаполнитьЗначенияСвойств(Результат, Поле);

	Родитель = Поле.ПолучитьРодителя();
	Если Родитель <> Неопределено Тогда
		Результат.Родитель = КФ_ОписаниеВыбранногоПоля(Родитель);
	КонецЕсли;

	Возврат Результат;
КонецФункции

#КонецОбласти
