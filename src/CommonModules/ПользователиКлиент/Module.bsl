///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////


#Область Пользователи

Процедура ПередНачаломРаботыСистемы(Параметры) Экспорт
	ПараметрыКлиента = БазоваяПодсистемаКлиентПовтИсп.СП_ПараметрыРаботыКлиентаПриЗапуске();

	Если ПараметрыКлиента.Свойство("ОшибкаНедостаточноПравДляВходаВПрограмму") Тогда
		Параметры.ПолученныеПараметрыКлиента.Вставить("ОшибкаНедостаточноПравДляВходаВПрограмму");
		сП_УстановитьИнтерактивнуюОбработкуПриОшибкеНедостаточноПравДляВходаВПрограмму(Параметры, ПараметрыКлиента.ОшибкаНедостаточноПравДляВходаВПрограмму);
	КонецЕсли;
КонецПроцедуры

Процедура ПередНачаломРаботыСистемы2(Параметры) Экспорт
	// Проверяет авторизацию пользователя и уведомляет об ошибке.
	ПараметрыКлиента = БазоваяПодсистемаКлиентПовтИсп.СП_ПараметрыРаботыКлиентаПриЗапуске();

	Если ПараметрыКлиента.Свойство("ОшибкаАвторизации") Тогда
		Параметры.ПолученныеПараметрыКлиента.Вставить("ОшибкаАвторизации");
		Параметры.Отказ						= Истина;
		Параметры.ИнтерактивнаяОбработка	= Новый ОписаниеОповещения("СП_ПоказатьПредупреждениеИПродолжить", БазоваяПодсистемаКлиент, ПараметрыКлиента.ОшибкаАвторизации);
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПередНачаломРаботыСистемы3(Параметры) Экспорт
	// Требует сменить пароль при необходимости.
	ПараметрыКлиента = БазоваяПодсистемаКлиентПовтИсп.СП_ПараметрыРаботыКлиентаПриЗапуске();

	Если ПараметрыКлиента.Свойство("ТребуетсяСменитьПароль") Тогда
		Параметры.ИнтерактивнаяОбработка = Новый ОписаниеОповещения("сП_ИнтерактивнаяОбработкаПриСменеПароляПриЗапуске", ЭтотОбъект);

		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура сП_ИнтерактивнаяОбработкаПриСменеПароляПриЗапуске(Параметры, Контекст) Экспорт
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПриВходеВПрограмму", Истина);

	ОткрытьФорму("ОбщаяФорма.СменаПароля", ПараметрыФормы,,,,, Новый ОписаниеОповещения("сП_ИнтерактивнаяОбработкаПриСменеПароляПриЗапускеЗавершение", ЭтотОбъект, Параметры));
КонецПроцедуры

Процедура сП_ИнтерактивнаяОбработкаПриСменеПароляПриЗапускеЗавершение(Результат, Параметры) Экспорт
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Параметры.Отказ = Истина;
	КонецЕсли;

	ВыполнитьОбработкуОповещения(Параметры.ОбработкаПродолжения);
КонецПроцедуры

Процедура сП_ПослеНачалаРаботыСистемы() Экспорт
	ПараметрыРаботыКлиента = БазоваяПодсистемаКлиентПовтИсп.СП_ПараметрыРаботыКлиентаПриЗапуске();
	Ключ = БазоваяПодсистемаКлиентСервер.ОН_СвойствоСтруктуры(ПараметрыРаботыКлиента, "КлючПредупрежденияБезопасности");
	Если ЗначениеЗаполнено(Ключ) Тогда
		// Небольшая задержка чтобы платформа успела отрисовать текущее окно, поверх которого выводится окно предупреждения.
		ПодключитьОбработчикОжидания("СП_ПоказатьПредупреждениеБезопасностиПослеЗапуска", 0.3, Истина);
	КонецЕсли;
КонецПроцедуры

Процедура сП_УстановитьИнтерактивнуюОбработкуПриОшибкеНедостаточноПравДляВходаВПрограмму(Параметры, ОписаниеОшибки) Экспорт
	Параметры.Отказ						= Истина;
	Параметры.ИнтерактивнаяОбработка	= Новый ОписаниеОповещения("сП_ИнтерактивнаяОбработкаПриОшибкеНедостаточноПравДляВходаВПрограмму", ЭтотОбъект, ОписаниеОшибки);
КонецПроцедуры

Процедура сП_ИнтерактивнаяОбработкаПриОшибкеНедостаточноПравДляВходаВПрограмму(Параметры, ОписаниеОшибки) Экспорт
	ПоказатьПредупреждение(
		Новый ОписаниеОповещения("сП_ИнтерактивнаяОбработкаПриОшибкеНедостаточноПравДляВходаВПрограммуПослеПредупреждения", ЭтотОбъект, Параметры),
		ОписаниеОшибки);
КонецПроцедуры

Процедура сП_ИнтерактивнаяОбработкаПриОшибкеНедостаточноПравДляВходаВПрограммуПослеПредупреждения(Параметры) Экспорт
	ВыполнитьОбработкуОповещения(Параметры.ОбработкаПродолжения);
КонецПроцедуры

Процедура сП_ПриВыполненииСтандартныхПериодическихПроверок(Параметры, ОбработкаПродолжения) Экспорт
	// Проверяет, что срок действия учетной записи истек и нужно завершить работу.
	Если Не Параметры.ВходВПрограммуЗапрещен Тогда
		ВыполнитьОбработкуОповещения(ОбработкаПродолжения);

		Возврат;
	КонецЕсли;

	ОткрытьФорму("ОбщаяФорма.ВходВПрограммуЗапрещен");
КонецПроцедуры

Процедура сП_ПоказатьПредупреждениеБезопасности() Экспорт
	ПараметрыРаботыКлиента = БазоваяПодсистемаКлиентПовтИсп.СП_ПараметрыРаботыКлиентаПриЗапуске();
	Ключ = БазоваяПодсистемаКлиентСервер.ОН_СвойствоСтруктуры(ПараметрыРаботыКлиента, "КлючПредупрежденияБезопасности");
	Если ЗначениеЗаполнено(Ключ) Тогда
		ОткрытьФорму("ОбщаяФорма.ПредупреждениеБезопасности", Новый Структура("Ключ", Ключ));
	КонецЕсли;
КонецПроцедуры

Процедура сП_ВыбратьНазначение(ДанныеФормы, Заголовок, ВыбиратьПользователей = Истина, ЭтоОтбор = Ложь, ОписаниеОповещения = Неопределено) Экспорт
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДанныеФормы", ДанныеФормы);
	ДополнительныеПараметры.Вставить("ЭтоОтбор", ЭтоОтбор);
	ДополнительныеПараметры.Вставить("ОписаниеОповещения", ОписаниеОповещения);

	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("сП_ПослеВыбораНазначения", ЭтотОбъект, ДополнительныеПараметры);

	Назначение = ?(ЭтоОтбор, ДанныеФормы.ВидПользователей, ДанныеФормы.Объект.Назначение);

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", Заголовок);
	ПараметрыФормы.Вставить("Назначение", Назначение);
	ПараметрыФормы.Вставить("ВыбиратьПользователей", ВыбиратьПользователей);
	ПараметрыФормы.Вставить("ЭтоОтбор", ЭтоОтбор);
	ОткрытьФорму("ОбщаяФорма.ВыборТиповПользователей", ПараметрыФормы,,,,, ОписаниеОповещенияОЗакрытии);
КонецПроцедуры

Процедура сП_ПослеВыбораНазначения(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Не ДополнительныеПараметры.ЭтоОтбор Тогда
		Назначение = ДополнительныеПараметры.ДанныеФормы.Объект.Назначение;
		Назначение.Очистить();
	КонецЕсли;

	МассивСинонимов	= Новый Массив;
	МассивТипов		= Новый Массив;

	Для Каждого Элемент Из РезультатЗакрытия Цикл
		Если Элемент.Пометка Тогда
			МассивСинонимов.Добавить(Элемент.Представление);
			МассивТипов.Добавить(Элемент.Значение);
			Если Не ДополнительныеПараметры.ЭтоОтбор Тогда
				НоваяСтрока						= Назначение.Добавить();
				НоваяСтрока.ТипПользователей	= Элемент.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаголовокЭлемента = СтрСоединить(МассивСинонимов, ", ");

	Если ДополнительныеПараметры.ЭтоОтбор Тогда
		ДополнительныеПараметры.ДанныеФормы.ВидПользователей = ЗаголовокЭлемента;
	Иначе
		ДополнительныеПараметры.ДанныеФормы.Элементы.ВыбратьНазначение.Заголовок = ЗаголовокЭлемента;
	КонецЕсли;

	Если ДополнительныеПараметры.ОписаниеОповещения <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, МассивТипов);
	КонецЕсли;
КонецПроцедуры

Процедура сП_ОткрытьФормуСменыПароля(Пользователь = Неопределено, ОбработкаПродолжения = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВернутьПарольБезУстановки", Ложь);
	ПараметрыФормы.Вставить("СтарыйПароль", Неопределено);
	Если ДополнительныеПараметры <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыФормы, ДополнительныеПараметры);
	КонецЕсли;
	ПараметрыФормы.Вставить("Пользователь", Пользователь);

	ОткрытьФорму("ОбщаяФорма.СменаПароля", ПараметрыФормы,,,,, ОбработкаПродолжения);
КонецПроцедуры

Процедура сП_РазвернутьПодсистемыРолей(Форма, Безусловно = Истина) Экспорт
	Элементы = Форма.Элементы;

	Если НЕ Безусловно И НЕ Элементы.РолиПоказатьТолькоВыбранныеРоли.Пометка Тогда
		Возврат;
	КонецЕсли;

	// Развернуть все.
	Для каждого Строка Из Форма.Роли.ПолучитьЭлементы() Цикл
		Элементы.Роли.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
