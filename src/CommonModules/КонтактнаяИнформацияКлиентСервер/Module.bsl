///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область УправлениеКонтактнойИнформацией

Функция УКИ_ОписаниеНовойКонтактнойИнформации(Знач ТипКонтактнойИнформации) Экспорт
	Если ТипЗнч(ТипКонтактнойИнформации) <> Тип("ПеречислениеСсылка.ТипыКонтактнойИнформации") Тогда
		ТипКонтактнойИнформации = "";
	КонецЕсли;

	Результат = Новый Структура;

	Результат.Вставить("value",   "");
	Результат.Вставить("comment", "");
	Результат.Вставить("type",    УКИ_ТипКонтактнойИнформацииВСтроку(ТипКонтактнойИнформации));

	Если ТипКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес") Тогда
		Результат.Вставить("country",     "");
		Результат.Вставить("addressType", "ВСвободнойФорме");
		Результат.Вставить("countryCode", "");
		Результат.Вставить("ZIPcode",     "");
		Результат.Вставить("area",        "");
		Результат.Вставить("areaType",    "");
		Результат.Вставить("city",        "");
		Результат.Вставить("cityType",    "");
		Результат.Вставить("street",      "");
		Результат.Вставить("streetType",  "");
	ИначеЕсли ТипКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон") Или ТипКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Факс") Тогда
		Результат.Вставить("countryCode", "");
		Результат.Вставить("areaCode", "");
		Результат.Вставить("number", "");
		Результат.Вставить("extNumber", "");
	ИначеЕсли ТипКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.ВебСтраница") Тогда
		Результат.Вставить("name", "");
	КонецЕсли;

	Возврат Результат;
КонецФункции

Функция УКИ_ТипКонтактнойИнформацииВСтроку(Знач ТипКонтактнойИнформации)
	Результат = Новый Соответствие;
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес"),					"Адрес");
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"),				"Телефон");
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты"),	"АдресЭлектроннойПочты");
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Skype"),					"Skype");
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.ВебСтраница"),			"ВебСтраница");
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Факс"),					"Факс");
	Результат.Вставить(ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Другое"),				"Другое");
	Результат.Вставить("", "");

	Возврат Результат[ТипКонтактнойИнформации];
КонецФункции

Функция УКИ_СтруктураПолейАдреса() Экспорт
	СтруктураАдреса = Новый Структура;
	СтруктураАдреса.Вставить("Представление",		"");
	СтруктураАдреса.Вставить("Страна",				"");
	СтруктураАдреса.Вставить("НаименованиеСтраны",	"");
	СтруктураАдреса.Вставить("КодСтраны",			"");

	Возврат СтруктураАдреса;
КонецФункции

Функция УКИ_СтруктураПолейТелефона() Экспорт
	СтруктураТелефона = Новый Структура;
	СтруктураТелефона.Вставить("Представление",	"");
	СтруктураТелефона.Вставить("КодСтраны",		"");
	СтруктураТелефона.Вставить("КодГорода",		"");
	СтруктураТелефона.Вставить("НомерТелефона",	"");
	СтруктураТелефона.Вставить("Добавочный",	"");
	СтруктураТелефона.Вставить("Комментарий",	"");

	Возврат СтруктураТелефона;
КонецФункции

Функция УКИ_СформироватьПредставлениеТелефона(КодСтраны, КодГорода, НомерТелефона, Добавочный, Комментарий) Экспорт
	Представление = СокрЛП(КодСтраны);
	Если Не ПустаяСтрока(Представление) И Не СтрНачинаетсяС(Представление, "+") Тогда
		Представление = "+" + Представление;
	КонецЕсли;

	Если Не ПустаяСтрока(КодГорода) Тогда
		Представление = Представление + ?(ПустаяСтрока(Представление), "", " ") + "(" + СокрЛП(КодГорода) + ")";
	КонецЕсли;

	Если Не ПустаяСтрока(НомерТелефона) Тогда
		Представление = Представление + ?(ПустаяСтрока(Представление), "", " ") + СокрЛП(НомерТелефона);
	КонецЕсли;

	Если НЕ ПустаяСтрока(Добавочный) Тогда
		Представление = Представление + ?(ПустаяСтрока(Представление), "", ", ") + "доб. " + СокрЛП(Добавочный);
	КонецЕсли;

	Если НЕ ПустаяСтрока(Комментарий) Тогда
		Представление = Представление + ?(ПустаяСтрока(Представление), "", ", ") + СокрЛП(Комментарий);
	КонецЕсли;

	Возврат Представление;
КонецФункции

Функция УКИ_НаименованиеСокращение(Знач Текст) Экспорт
	Результат = Новый Структура("Наименование, Сокращение");

	Текст = СокрЛП(Текст);

	ТекстВерхнийРегистр = ВРег(Текст);
	Если СтрЗаканчиваетсяНа(ТекстВерхнийРегистр, "ТЕР. СНТ") Или СтрЗаканчиваетсяНа(ТекстВерхнийРегистр, "ТЕР. ДНТ") Тогда
		Результат.Сокращение	= Прав(Текст, 8);
		Результат.Наименование	= Лев(Текст, СтрДлина(Текст) - 9);

		Возврат Результат;
	КонецЕсли;

	Части = УКИ_НаборНаименованийИСокращений(Текст, Истина);
	Если Части.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Результат, Части[0]);
	Иначе
		Результат.Наименование = Текст;
	КонецЕсли;

	Возврат Результат;
КонецФункции

Функция УКИ_СловаТекста(Знач Текст, Знач Разделители = Неопределено)
	НачалоСлова = 0;
	Состояние   = 0;
	Результат   = Новый Массив;

	Для Позиция = 1 По СтрДлина(Текст) Цикл
		ТекущийСимвол	= Сред(Текст, Позиция, 1);
		ЭтоРазделитель	= ?(Разделители = Неопределено, ПустаяСтрока(ТекущийСимвол), СтрНайти(Разделители, ТекущийСимвол) > 0);

		Если Состояние = 0 И (Не ЭтоРазделитель) Тогда
			НачалоСлова = Позиция;
			Состояние   = 1;
		ИначеЕсли Состояние = 1 И ЭтоРазделитель Тогда
			Результат.Добавить(Сред(Текст, НачалоСлова, Позиция-НачалоСлова));
			Состояние = 0;
		КонецЕсли;
	КонецЦикла;

	Если Состояние = 1 Тогда
		Результат.Добавить(Сред(Текст, НачалоСлова, Позиция-НачалоСлова));
	КонецЕсли;

	Возврат Результат;
КонецФункции

Функция УКИ_НаборНаименованийИСокращений(Знач Текст, Знач ВыделятьСокращения = Истина)
	Результат = Новый Массив;
	Для Каждого Часть Из УКИ_СловаТекста(Текст, ",") Цикл
		СтрокаЧасти = СокрЛП(Часть);
		Если ПустаяСтрока(СтрокаЧасти) Тогда
			Продолжить;
		КонецЕсли;

		Позиция = ?(ВыделятьСокращения, СтрДлина(СтрокаЧасти), 0);
		Пока Позиция > 0 Цикл
			Если Сред(СтрокаЧасти, Позиция, 1) = " " Тогда
				Результат.Добавить(Новый Структура("Наименование, Сокращение",
					СокрЛП(Лев(СтрокаЧасти, Позиция-1)), СокрЛП(Сред(СтрокаЧасти, Позиция))));
				Позиция = -1;

				Прервать;
			КонецЕсли;
			Позиция = Позиция - 1;
		КонецЦикла;
		Если Позиция = 0 Тогда
			Результат.Добавить(Новый Структура("Наименование, Сокращение", СтрокаЧасти));
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;
КонецФункции

Функция УКИ_СоединитьНаименованиеИТипАдресногоОбъекта(Знач Наименование, Знач ТипАдресногоОбъекта, ЭтоРегион = Ложь) Экспорт
	Если ПустаяСтрока(ТипАдресногоОбъекта) Тогда
		Возврат Наименование;
	КонецЕсли;

	Если ЭтоРегион Тогда
		Если СтрНачинаетсяС(ВРег(Наименование), ВРег("Ханты-Мансийский Автономный округ - Югра")) Тогда
			Возврат Наименование;
		КонецЕсли;

		Возврат СокрЛП(Наименование + " " + ТипАдресногоОбъекта);
	КонецЕсли;

	Возврат СокрЛП(ТипАдресногоОбъекта + " "+ Наименование);
КонецФункции

Функция УКИ_АдресСайта(Знач Представление, Знач Ссылка, ТолькоПросмотр) Экспорт
	Если ПустаяСтрока(Представление) Или ПустаяСтрока(Ссылка)  Тогда
		Представление	= "Заполнить";
		Ссылка			= "e1cib/app/Обработка.ВводКонтактнойИнформации.Форма.ВебСайт";
	КонецЕсли;

	Если СтрСравнить(Представление, "Заполнить") = 0 И ТолькоПросмотр Тогда
		Возврат Представление;
	КонецЕсли;

	ТекстПредставления = Новый ФорматированнаяСтрока(Представление,,,, Ссылка);

	Если ТолькоПросмотр Тогда
		Возврат ТекстПредставления;
	КонецЕсли;

	КартинкаИзменить = Новый ФорматированнаяСтрока(БиблиотекаКартинок.РедактироватьАдресСайта,,,, "e1cib/app/Обработка.ВводКонтактнойИнформации.Форма.ВебСайт");

	Возврат Новый ФорматированнаяСтрока(ТекстПредставления, "  ", КартинкаИзменить);
КонецФункции

#КонецОбласти

#Область РаботаСАдресами

Функция РСА_ОписаниеНовойКонтактнойИнформации(Знач ТипКонтактнойИнформации) Экспорт
	Если ТипЗнч(ТипКонтактнойИнформации) <> Тип("ПеречислениеСсылка.ТипыКонтактнойИнформации") Тогда
		ТипКонтактнойИнформации = "";
	КонецЕсли;

	Результат = УКИ_ОписаниеНовойКонтактнойИнформации(ТипКонтактнойИнформации);

	Если ТипКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес") Тогда
		Результат.Вставить("id",               "");
		Результат.Вставить("areaCode",         "");
		Результат.Вставить("areaId",           "");
		Результат.Вставить("district",         "");
		Результат.Вставить("districtType",     "");
		Результат.Вставить("districtId",       "");
		Результат.Вставить("munDistrict",      "");
		Результат.Вставить("munDistrictType",  "");
		Результат.Вставить("munDistrictId",    "");
		Результат.Вставить("cityId",           "");
		Результат.Вставить("settlement",       "");
		Результат.Вставить("settlementType",   "");
		Результат.Вставить("settlementId",     "");
		Результат.Вставить("cityDistrict",     "");
		Результат.Вставить("cityDistrictType", "");
		Результат.Вставить("cityDistrictId",   "");
		Результат.Вставить("territory",        "");
		Результат.Вставить("territoryType",    "");
		Результат.Вставить("territoryId",      "");
		Результат.Вставить("locality",         "");
		Результат.Вставить("localityType",     "");
		Результат.Вставить("localityId",       "");
		Результат.Вставить("streetId",         "");
		Результат.Вставить("houseType",        "");
		Результат.Вставить("houseNumber",      "");
		Результат.Вставить("houseId",          "");
		Результат.Вставить("buildings",        Новый Массив);
		Результат.Вставить("apartments",       Новый Массив);
		Результат.Вставить("codeKLADR",        "");
		Результат.Вставить("oktmo",            "");
		Результат.Вставить("okato",            "");
		Результат.Вставить("asInDocument",     "");
		Результат.Вставить("ifnsFLCode",       "");
		Результат.Вставить("ifnsULCode",       "");
		Результат.Вставить("ifnsFLAreaCode",   "");
		Результат.Вставить("ifnsULAreaCode",   "");
		Результат.Вставить("stead",            "");
		Результат.Вставить("steadId",          "");
	КонецЕсли;

	Возврат Результат;
КонецФункции

Процедура РСА_ОбновитьПредставлениеАдреса(Адрес, ВключатьСтрануВПредставление) Экспорт
	Представление	= РСА_ПредставлениеАдреса(Адрес, ВключатьСтрануВПредставление);
	Адрес.Value		= Представление;
КонецПроцедуры

Функция РСА_ПредставлениеАдреса(Адрес, ВключатьСтрануВПредставление, ТипАдреса = Неопределено) Экспорт
	Если ТипЗнч(Адрес) <> Тип("Структура") Тогда
		ВызватьИсключение "Для формирования представления адреса передан некорректный тип адреса";
	КонецЕсли;

	Если ТипАдреса = Неопределено Тогда
		ТипАдреса = Адрес.AddressType;
	КонецЕсли;

	Если СтрСравнить("ВСвободнойФорме", ТипАдреса) = 0 Тогда
		Если Не Адрес.Свойство("Country") Или ПустаяСтрока(Адрес.Country) Тогда
			Возврат Адрес.Value;
		КонецЕсли;

		ВПредставлениеЕстьСтрана = СтрНачинаетсяС(ВРег(Адрес.Value), ВРег(Адрес.Country));
		Если ВключатьСтрануВПредставление Тогда
			Если Не ВПредставлениеЕстьСтрана Тогда
				Возврат Адрес.Country + ", " + Адрес.Value;
			КонецЕсли;
		Иначе
			Если ВПредставлениеЕстьСтрана И СтрНайти(Адрес.Value, ",") > 0 Тогда
				СписокПолей = СтрРазделить(Адрес.Value, ",");
				СписокПолей.Удалить(0);

				Возврат СтрСоединить(СписокПолей, ",");
			КонецЕсли;
		КонецЕсли;

		Возврат Адрес.Value;
	КонецЕсли;

	Если СтрСравнить("ВСвободнойФорме", ТипАдреса) = 0 Тогда
		Возврат РСА_ПредставлениеАдресаВСвободнойФорме(Адрес, ВключатьСтрануВПредставление);
	КонецЕсли;

	СписокЗаполненныхУровней = Новый Массив;

	Если ВключатьСтрануВПредставление И Адрес.Свойство("Country") И НЕ ПустаяСтрока(Адрес.Country) Тогда
		СписокЗаполненныхУровней.Добавить(Адрес.Country);
	КонецЕсли;

	Если Адрес.Свойство("ZipCode") И НЕ ПустаяСтрока(Адрес.ZipCode) Тогда
		СписокЗаполненныхУровней.Добавить(Адрес.ZipCode);
	КонецЕсли;

	Для каждого ИмяУровня Из РСА_ИменаУровнейАдреса(ТипАдреса, Истина) Цикл
		Если ЗначениеЗаполнено(Адрес[ИмяУровня]) Тогда
			Если СтрСравнить(ИмяУровня, "MunDistrict") = 0 Тогда
				Адрес[ИмяУровня] = РСА_КраткоеНаписаниеМуниципальныхРайонов(Адрес[ИмяУровня], Адрес[ИмяУровня + "Type"]);
			КонецЕсли;

			Если СтрСравнить(ИмяУровня, "Settlement") = 0 Тогда
				Адрес[ИмяУровня] = РСА_КраткоеНаписаниеПоселений(Адрес[ИмяУровня], Адрес[ИмяУровня + "Type"]);
			КонецЕсли;

			СписокЗаполненныхУровней.Добавить(УКИ_СоединитьНаименованиеИТипАдресногоОбъекта(Адрес[ИмяУровня], Адрес[ИмяУровня + "Type"], СтрСравнить(ИмяУровня, "Area") = 0));
		КонецЕсли;
	КонецЦикла;

	Если Адрес.Свойство("HouseNumber") И НЕ ПустаяСтрока(Адрес.HouseNumber) Тогда
		СписокЗаполненныхУровней.Добавить(РСА_СоединитьНомерИТипЗдания(Адрес.HouseNumber, Адрес.HouseType));
	ИначеЕсли Адрес.Свойство("stead") И Не ПустаяСтрока(Адрес.stead) Тогда
		СписокЗаполненныхУровней.Добавить(РСА_СоединитьНомерИТипЗдания(Адрес.stead, "Зем. участок"));
	КонецЕсли;

	Если Адрес.Свойство("Buildings") И Адрес.Buildings.Количество() > 0 Тогда
		Для каждого Строение Из Адрес.Buildings Цикл
			Если ЗначениеЗаполнено(Строение.Number) Тогда
				СписокЗаполненныхУровней.Добавить(РСА_СоединитьНомерИТипЗдания(Строение.Number, Строение.Type));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если Адрес.Свойство("Apartments") И Адрес.Apartments <> Неопределено И Адрес.Apartments.Количество() > 0 Тогда
		Для каждого Строение Из Адрес.Apartments Цикл
			Если ЗначениеЗаполнено(Строение.Number) Тогда
				Если СтрСравнить(Строение.Type, "Другое") <> 0 Тогда
					СписокЗаполненныхУровней.Добавить(РСА_СоединитьНомерИТипЗдания(Строение.Number, Строение.Type));
				Иначе
					СписокЗаполненныхУровней.Добавить(Строение.Number);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Представление = СтрСоединить(СписокЗаполненныхУровней, ", ");

	Возврат Представление;
КонецФункции

Функция РСА_ПредставлениеАдресаВСвободнойФорме(Знач Адрес, Знач ВключатьСтрануВПредставление)
	Если ВключатьСтрануВПредставление И Адрес.Свойство("Country") И НЕ ПустаяСтрока(Адрес.Country) Тогда
		ЧастиАдреса = СтрРазделить(Адрес.Value, ",");
		Если ЗначениеЗаполнено(Адрес.Value) И СтрСравнить(ЧастиАдреса[0], Адрес.Country) = 0 Тогда
			ЧастиАдреса.Удалить(0);
			Адрес.Value = СтрСоединить(ЧастиАдреса, ",");
		КонецЕсли;
	КонецЕсли;

	Возврат Адрес.Value;
КонецФункции

Функция РСА_ИменаУровнейАдреса(ТипАдреса, ВключатьУровеньУлицы, ВключатьУровеньДома = Ложь) Экспорт
	Уровни = Новый Массив;

	Если ТипАдреса = "Иностранный" Тогда
		Уровни.Добавить("Area");
	Иначе
		Уровни.Добавить("Area");
		Если ТипАдреса = "ЕАЭС" Тогда
			Уровни.Добавить("District");
			Уровни.Добавить("City");
			Уровни.Добавить("Locality");
		Иначе
			Если ТипАдреса = "Все" Тогда
				Уровни.Добавить("District");
				Уровни.Добавить("City");
				Уровни.Добавить("MunDistrict");
				Уровни.Добавить("Settlement");
			Иначе
				Если СтрСравнить(ТипАдреса, "Муниципальный") = 0 Тогда
					Уровни.Добавить("MunDistrict");
					Уровни.Добавить("Settlement");
					Уровни.Добавить("City");
				Иначе
					Уровни.Добавить("District");
					Уровни.Добавить("City");
				КонецЕсли;
			КонецЕсли;

			Уровни.Добавить("CityDistrict");
			Уровни.Добавить("Locality");
			Уровни.Добавить("Territory");
		КонецЕсли;
	КонецЕсли;

	Если ВключатьУровеньУлицы Тогда
		Уровни.Добавить("Street");
	КонецЕсли;

	Если ВключатьУровеньДома Тогда
		Уровни.Добавить("house");
	КонецЕсли;

	Возврат Уровни;
КонецФункции

Функция РСА_КраткоеНаписаниеМуниципальныхРайонов(Наименование, Сокращение) Экспорт
	Если СтрСравнить(Сокращение, "г.о.") = 0 Тогда
		Наименование = СокрЛП(СтрЗаменить(Наименование, "Городской округ", ""));
	КонецЕсли;
	Если СтрСравнить(Сокращение, "м.р-н") = 0 Тогда
		Наименование = СокрЛП(СтрЗаменить(Наименование, "муниципальный район", ""));
	КонецЕсли;
	Если СтрСравнить(Сокращение, "вн.тер.") = 0 Тогда
		Наименование = СокрЛП(СтрЗаменить(Наименование, "Внутригородская территория", ""));
		Сокращение   = "вн.тер.г.";
	КонецЕсли;
	Если СтрСравнить(Сокращение, "вн.тер.г.") = 0 Тогда
		Наименование = СокрЛП(СтрЗаменить(Наименование, "Внутригородская территория", ""));
	КонецЕсли;
	Если СтрСравнить(Сокращение, "м.о.") = 0 Или СтрСравнить(Сокращение, "мун. окр.") = 0  Тогда
		Наименование = СокрЛП(СтрЗаменить(Наименование, "Муниципальный округ", ""));
	КонецЕсли;

	Возврат Наименование;
КонецФункции

Функция РСА_КраткоеНаписаниеПоселений(Наименование, Сокращение) Экспорт
	Если СтрСравнить(Сокращение, "г.п.") Или СтрСравнить(Сокращение, "г. п.") = 0 Тогда
		Наименование = СокрЛП(СтрЗаменить(Наименование, "Городское поселение", ""));
	КонецЕсли;
	Если СтрСравнить(Сокращение, "вн.р-н") = 0 Тогда
		Наименование = СокрЛП(СтрЗаменить(Наименование, "Внутригородской район", ""));
	КонецЕсли;
	Если СтрСравнить(Сокращение, "с.п.") = 0 Тогда
		Наименование = СокрЛП(СтрЗаменить(Наименование, "Сельское поселение", ""));
	КонецЕсли;
	Если СтрСравнить(Сокращение, "меж.тер.") = 0  Тогда
		Наименование = СокрЛП(СтрЗаменить(Наименование, "Межселенная территория", ""));
	КонецЕсли;

	Возврат Наименование;
КонецФункции

Функция РСА_СоединитьНомерИТипЗдания(Знач Номер, Знач ТипЗданияИлиПомещения)
	Если ПустаяСтрока(ТипЗданияИлиПомещения) Тогда
		Возврат Номер;
	КонецЕсли;

	СокращенияЗданийИПомещений = РСА_СокращенияЗданийИПомещений();

	Если СокращенияЗданийИПомещений[ВРег(ТипЗданияИлиПомещения)] = Неопределено Тогда
		Возврат НРег(ТипЗданияИлиПомещения) + " "+ Номер;
	КонецЕсли;

	Возврат СокращенияЗданийИПомещений[ВРег(ТипЗданияИлиПомещения)] + " " + Номер;
КонецФункции

Функция РСА_СокращенияЗданийИПомещений() Экспорт
	Сокращения = Новый Соответствие;

	Сокращения.Вставить("ВЛАДЕНИЕ",								"влд.");
	Сокращения.Вставить("ГАРАЖ",								"г-ж");
	Сокращения.Вставить("ДОМ",									"д.");
	Сокращения.Вставить("ДОМОВЛАДЕНИЕ",							"двлд.");
	Сокращения.Вставить("ЗДАНИЕ",								"зд.");
	Сокращения.Вставить("ЗЕМЕЛЬНЫЙ УЧАСТОК",					"з/у");
	Сокращения.Вставить("ЗЕМ. УЧАСТОК",							"з/у");
	Сокращения.Вставить("КВАРТИРА",								"кв.");
	Сокращения.Вставить("КОМНАТА",								"ком.");
	Сокращения.Вставить("ПОДВАЛ",								"подв.");
	Сокращения.Вставить("КОТЕЛЬНАЯ",							"кот.");
	Сокращения.Вставить("ПОГРЕБ",								"п-б");
	Сокращения.Вставить("КОРПУС",								"к.");
	Сокращения.Вставить("МАШИНО-МЕСТО",							"м/м");
	Сокращения.Вставить("ОБЪЕКТ НЕЗАВЕРШЕННОГО СТРОИТЕЛЬСТВА",	"ОНС");
	Сокращения.Вставить("ОФИС",									"офис");
	Сокращения.Вставить("ПАВИЛЬОН",								"пав.");
	Сокращения.Вставить("ПОМЕЩЕНИЕ",							"помещ.");
	Сокращения.Вставить("РАБОЧИЙ УЧАСТОК",						"раб.уч.");
	Сокращения.Вставить("СКЛАД",								"скл.");
	Сокращения.Вставить("СООРУЖЕНИЕ",							"соор.");
	Сокращения.Вставить("СТРОЕНИЕ",								"стр.");
	Сокращения.Вставить("ТОРГОВЫЙ ЗАЛ",							"торг.зал");
	Сокращения.Вставить("ЦЕХ",									"цех");

	Возврат Сокращения;
КонецФункции

Функция РСА_СопоставлениеНаименованиеУровнюАдреса(ИмяУровня) Экспорт
	Уровни = Новый Соответствие;

	Уровни.Вставить("Area",			1);
	Уровни.Вставить("MunDistrict",	31);
	Уровни.Вставить("Settlement",	41);
	Уровни.Вставить("District",		3);
	Уровни.Вставить("City",			4);
	Уровни.Вставить("CityDistrict",	5);
	Уровни.Вставить("Locality",		6);
	Уровни.Вставить("Territory",	65);
	Уровни.Вставить("Street",		7);

	Возврат Уровни[ИмяУровня];
КонецФункции

#КонецОбласти
