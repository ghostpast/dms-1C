///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ВариантыОтчетов

Функция ВО_ДоступныеОтчеты(ПроверятьФункциональныеОпции = Истина) Экспорт
	Результат			= Новый Массив;
	ПолныеИменаОтчетов	= Новый Массив;

	ПоУмолчаниюВсеПодключены = Неопределено;
	Для Каждого ОтчетМетаданные Из Метаданные.Отчеты Цикл
		Если Не ПравоДоступа("Просмотр", ОтчетМетаданные) Или Не ВариантыОтчетовСервер.ВО_ОтчетПодключенКХранилищу(ОтчетМетаданные, ПоУмолчаниюВсеПодключены) Тогда
			Продолжить;
		КонецЕсли;
		Если ПроверятьФункциональныеОпции И Не БазоваяПодсистемаСервер.ОН_ОбъектМетаданныхДоступенПоФункциональнымОпциям(ОтчетМетаданные) Тогда
			Продолжить;
		КонецЕсли;
		ПолныеИменаОтчетов.Добавить(ОтчетМетаданные.ПолноеИмя());
	КонецЦикла;

	ИдентификаторыОтчетов = Справочники.ИдентификаторыОбъектовМетаданных.ИдентификаторыОбъектовМетаданных(ПолныеИменаОтчетов, Истина);
	Для Каждого ИдентификаторОтчета Из ИдентификаторыОтчетов Цикл
		Результат.Добавить(ИдентификаторОтчета.Значение);
	КонецЦикла;

	Возврат Новый ФиксированныйМассив(Результат);
КонецФункции

Функция ВО_ОтключенныеВариантыПрограммы() Экспорт
	Возврат Новый ФиксированныйМассив(ВариантыОтчетовСервер.ВО_ОтключенныеВариантыОтчетов());
КонецФункции

Функция ВО_Параметры() Экспорт
	УстановитьОтключениеБезопасногоРежима(Истина);
	УстановитьПривилегированныйРежим(Истина);

	ПолноеИмяПодсистемы	= "СтандартныеПодсистемы.ВариантыОтчетов";
	Параметры			= РегистрыСведений.ПараметрыРаботыПрограммы.ПараметрРаботыПрограммы(ПолноеИмяПодсистемы);
	Если Параметры = Неопределено Тогда
		ВариантыОтчетовСервер.ВО_ОперативноеОбновлениеОбщихДанныхКонфигурации(Новый Структура("РазделенныеОбработчики"));
		Параметры = РегистрыСведений.ПараметрыРаботыПрограммы.ПараметрРаботыПрограммы(ПолноеИмяПодсистемы);
	КонецЕсли;

	Если ЗначениеЗаполнено(ПараметрыСеанса.ВерсияРасширений) Тогда
		ПараметрыРасширений = РегистрыСведений.ПараметрыРаботыВерсийРасширений.ПараметрРаботыРасширения(ПолноеИмяПодсистемы, Ложь);
		Если ПараметрыРасширений = Неопределено Тогда
			ВариантыОтчетовСервер.ВО_ПриЗаполненииВсехПараметровРаботыРасширений();
			ПараметрыРасширений = РегистрыСведений.ПараметрыРаботыВерсийРасширений.ПараметрРаботыРасширения(ПолноеИмяПодсистемы, Ложь);
		КонецЕсли;

		Если ПараметрыРасширений <> Неопределено Тогда
			БазоваяПодсистемаКлиентСервер.ОН_ДополнитьМассив(Параметры.ОтчетыСНастройками,						ПараметрыРасширений.ОтчетыСНастройками);
			БазоваяПодсистемаКлиентСервер.ОН_ДополнитьТаблицу(ПараметрыРасширений.ТаблицаФункциональныхОпций,	Параметры.ТаблицаФункциональныхОпций);
		КонецЕсли;
	КонецЕсли;

	// Зарезервировано для новых подсистем

	УстановитьПривилегированныйРежим(Ложь);
	УстановитьОтключениеБезопасногоРежима(Ложь);

	Возврат Параметры;
КонецФункции

Функция ВО_ПодсистемыТекущегоПользователя() Экспорт
	ТипыИдентификатора = Новый Массив;
	ТипыИдентификатора.Добавить(Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных"));
	ТипыИдентификатора.Добавить(Тип("СправочникСсылка.ИдентификаторыОбъектовРасширений"));

	Результат = Новый ДеревоЗначений;
	Результат.Колонки.Добавить("Ссылка",              Новый ОписаниеТипов(ТипыИдентификатора));
	Результат.Колонки.Добавить("Имя",                 Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150)));
	Результат.Колонки.Добавить("ПолноеИмя",           Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(510)));
	Результат.Колонки.Добавить("Представление",       Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150)));
	Результат.Колонки.Добавить("РазделСсылка",        Новый ОписаниеТипов(ТипыИдентификатора));
	Результат.Колонки.Добавить("РазделПолноеИмя",     Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(510)));
	Результат.Колонки.Добавить("Приоритет",           Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	Результат.Колонки.Добавить("ПолноеПредставление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(300)));

	КорневаяСтрока					= Результат.Строки.Добавить();
	КорневаяСтрока.Ссылка			= Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка();
	КорневаяСтрока.Представление	= "Все разделы";

	ПолныеИменаПодсистем	= Новый Массив;
	ПолныеИменаСтрокДерева	= Новый Соответствие;

	ИдентификаторНачальнойСтраницы	= "Подсистемы";
	СписокРазделов					= ВариантыОтчетовСервер.ВО_СписокРазделов();

	Приоритет = 0;
	Для Каждого ЭлементСписка Из СписокРазделов Цикл
		РазделМетаданные = ЭлементСписка.Значение;
		Если НЕ (ТипЗнч(РазделМетаданные) = Тип("ОбъектМетаданных") И СтрНачинаетсяС(РазделМетаданные.ПолноеИмя(), "Подсистема")) И НЕ (ТипЗнч(РазделМетаданные) = Тип("Строка") И РазделМетаданные = ИдентификаторНачальнойСтраницы) Тогда
			ВызватьИсключение "Некорректно определены значения разделов в процедуре ВариантыОтчетовПереопределяемый.ОпределитьРазделыСВариантамиОтчетов";
		КонецЕсли;

		Если ЗначениеЗаполнено(ЭлементСписка.Представление) Тогда
			ШаблонЗаголовка = ЭлементСписка.Представление;
		Иначе
			ШаблонЗаголовка = "Отчеты раздела ""%1""";
		КонецЕсли;

		ЭтоНачальнаяСтраница = (РазделМетаданные = ИдентификаторНачальнойСтраницы);

		Если Не ЭтоНачальнаяСтраница И (Не ПравоДоступа("Просмотр", РазделМетаданные) Или Не БазоваяПодсистемаСервер.ОН_ОбъектМетаданныхДоступенПоФункциональнымОпциям(РазделМетаданные)) Тогда
			Продолжить; // Подсистема не доступна по ФО или по правам.
		КонецЕсли;

		СтрокаДерева = КорневаяСтрока.Строки.Добавить();
		Если ЭтоНачальнаяСтраница Тогда
			СтрокаДерева.Имя           = ИдентификаторНачальнойСтраницы;
			СтрокаДерева.ПолноеИмя     = ИдентификаторНачальнойСтраницы;
			СтрокаДерева.Представление = "Главное";
		Иначе
			СтрокаДерева.Имя           = РазделМетаданные.Имя;
			СтрокаДерева.ПолноеИмя     = РазделМетаданные.ПолноеИмя();
			СтрокаДерева.Представление = РазделМетаданные.Представление();
		КонецЕсли;

		ПолныеИменаПодсистем.Добавить(СтрокаДерева.ПолноеИмя);

		Если ПолныеИменаСтрокДерева[СтрокаДерева.ПолноеИмя] = Неопределено Тогда
			ПолныеИменаСтрокДерева.Вставить(СтрокаДерева.ПолноеИмя, СтрокаДерева);
		Иначе
			ПолныеИменаСтрокДерева.Вставить(СтрокаДерева.ПолноеИмя, Истина); // Требуется поиск по дереву.
		КонецЕсли;

		СтрокаДерева.РазделПолноеИмя		= СтрокаДерева.ПолноеИмя;
		СтрокаДерева.ПолноеПредставление	= СтрШаблон(ШаблонЗаголовка, СтрокаДерева.Представление);

		Приоритет				= Приоритет + 1;
		СтрокаДерева.Приоритет	= Формат(Приоритет, "ЧЦ=4; ЧДЦ=0; ЧВН=; ЧГ=0");
		Если Не ЭтоНачальнаяСтраница Тогда
			ВО_ДобавитьПодсистемыТекущегоПользователя(СтрокаДерева, РазделМетаданные, ПолныеИменаПодсистем, ПолныеИменаСтрокДерева);
		КонецЕсли;
	КонецЦикла;

	СсылкиПодсистем = Справочники.ИдентификаторыОбъектовМетаданных.ИдентификаторыОбъектовМетаданных(ПолныеИменаПодсистем, Истина);
	Для Каждого КлючИЗначение Из СсылкиПодсистем Цикл
		СтрокаДерева = ПолныеИменаСтрокДерева[КлючИЗначение.Ключ];
		Если СтрокаДерева = Истина Тогда // Требуется поиск по дереву.
			Найденные = Результат.Строки.НайтиСтроки(Новый Структура("ПолноеИмя", КлючИЗначение.Ключ), Истина);
			Для Каждого СтрокаДерева Из Найденные Цикл
				СтрокаДерева.Ссылка			= КлючИЗначение.Значение;
				СтрокаДерева.РазделСсылка	= СсылкиПодсистем[СтрокаДерева.РазделПолноеИмя];
			КонецЦикла;
		Иначе
			СтрокаДерева.Ссылка			= КлючИЗначение.Значение;
			СтрокаДерева.РазделСсылка	= СсылкиПодсистем[СтрокаДерева.РазделПолноеИмя];
		КонецЕсли;
	КонецЦикла;

	ПолныеИменаСтрокДерева.Очистить();

	Возврат Результат;
КонецФункции

Процедура ВО_ДобавитьПодсистемыТекущегоПользователя(СтрокаРодителя, МетаданныеРодителя, ПолныеИменаПодсистем, ПолныеИменаСтрокДерева)
	ПриоритетРодителя = СтрокаРодителя.Приоритет;

	Приоритет = 0;
	Для Каждого ПодсистемаМетаданные Из МетаданныеРодителя.Подсистемы Цикл
		Приоритет = Приоритет + 1;

		Если Не ПодсистемаМетаданные.ВключатьВКомандныйИнтерфейс Или Не ПравоДоступа("Просмотр", ПодсистемаМетаданные) Или Не БазоваяПодсистемаСервер.ОН_ОбъектМетаданныхДоступенПоФункциональнымОпциям(ПодсистемаМетаданные) Тогда
			Продолжить; // Подсистема не доступна по ФО или по правам.
		КонецЕсли;

		СтрокаДерева				= СтрокаРодителя.Строки.Добавить();
		СтрокаДерева.Имя			= ПодсистемаМетаданные.Имя;
		СтрокаДерева.ПолноеИмя		= ПодсистемаМетаданные.ПолноеИмя();
		СтрокаДерева.Представление	= ПодсистемаМетаданные.Представление();
		ПолныеИменаПодсистем.Добавить(СтрокаДерева.ПолноеИмя);
		Если ПолныеИменаСтрокДерева[СтрокаДерева.ПолноеИмя] = Неопределено Тогда
			ПолныеИменаСтрокДерева.Вставить(СтрокаДерева.ПолноеИмя, СтрокаДерева);
		Иначе
			ПолныеИменаСтрокДерева.Вставить(СтрокаДерева.ПолноеИмя, Истина); // Требуется поиск по дереву.
		КонецЕсли;
		СтрокаДерева.РазделПолноеИмя = СтрокаРодителя.РазделПолноеИмя;

		Если СтрДлина(ПриоритетРодителя) > 12 Тогда
			СтрокаДерева.ПолноеПредставление = СтрокаРодителя.Представление + ": " + СтрокаДерева.Представление;
		Иначе
			СтрокаДерева.ПолноеПредставление = СтрокаДерева.Представление;
		КонецЕсли;
		СтрокаДерева.Приоритет = ПриоритетРодителя + Формат(Приоритет, "ЧЦ=4; ЧДЦ=0; ЧВН=; ЧГ=0");

		ВО_ДобавитьПодсистемыТекущегоПользователя(СтрокаДерева, ПодсистемаМетаданные, ПолныеИменаПодсистем, ПолныеИменаСтрокДерева);
	КонецЦикла;
КонецПроцедуры

Функция ВО_ПредставленияПодсистем() Экспорт
	ТипыИдентификатора = Новый Массив;
	ТипыИдентификатора.Добавить(Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных"));
	ТипыИдентификатора.Добавить(Тип("СправочникСсылка.ИдентификаторыОбъектовРасширений"));

	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Ссылка",        Новый ОписаниеТипов(ТипыИдентификатора));
	Результат.Колонки.Добавить("ПолноеИмя",     Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(510)));
	Результат.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150)));

	Если ТекущийЯзык() = Метаданные.ОсновнойЯзык Тогда
		Возврат Результат;
	КонецЕсли;

	ИдентификаторНачальнойСтраницы = "Подсистемы";
	Для Каждого Раздел Из ВариантыОтчетовСервер.ВО_СписокРазделов() Цикл
		РазделМетаданные = Раздел.Значение;
		Если НЕ (ТипЗнч(РазделМетаданные) = Тип("ОбъектМетаданных") И СтрНачинаетсяС(РазделМетаданные.ПолноеИмя(), "Подсистема"))
			И НЕ (ТипЗнч(РазделМетаданные) = Тип("Строка") И РазделМетаданные = ИдентификаторНачальнойСтраницы) Тогда

			ВызватьИсключение "Некорректно определены значения разделов в процедуре ВариантыОтчетовПереопределяемый.ОпределитьРазделыСВариантамиОтчетов";
		КонецЕсли;

		ЭтоНачальнаяСтраница = (РазделМетаданные = ИдентификаторНачальнойСтраницы);
		Если Не ЭтоНачальнаяСтраница И (Не ПравоДоступа("Просмотр", РазделМетаданные) Или Не БазоваяПодсистемаСервер.ОН_ОбъектМетаданныхДоступенПоФункциональнымОпциям(РазделМетаданные)) Тогда
			Продолжить;
		КонецЕсли;

		СтрокаТаблицы = Результат.Добавить();
		Если ЭтоНачальнаяСтраница Тогда
			СтрокаТаблицы.ПолноеИмя     = ИдентификаторНачальнойСтраницы;
			СтрокаТаблицы.Представление = "Главное";
		Иначе
			СтрокаТаблицы.ПолноеИмя     = РазделМетаданные.ПолноеИмя();
			СтрокаТаблицы.Представление = РазделМетаданные.Представление();
		КонецЕсли;
		СтрокаТаблицы.Ссылка = Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка();
		Если Не ЭтоНачальнаяСтраница Тогда
			ВО_ДобавитьПодсистемы(Результат, РазделМетаданные);
		КонецЕсли;
	КонецЦикла;

	Результат.Индексы.Добавить("ПолноеИмя");

	СсылкиПодсистем = Справочники.ИдентификаторыОбъектовМетаданных.ИдентификаторыОбъектовМетаданных(Результат.ВыгрузитьКолонку("ПолноеИмя"), Ложь);
	Для Каждого СсылкаПодсистемы Из СсылкиПодсистем Цикл
		СтрокаТаблицы = Результат.Найти(СсылкаПодсистемы.Ключ, "ПолноеИмя");
		Если СтрокаТаблицы <> Неопределено Тогда
			СтрокаТаблицы.Ссылка = СсылкаПодсистемы.Значение;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;
КонецФункции

Процедура ВО_ДобавитьПодсистемы(ТаблицаПодсистем, МетаданныеРодителя)
	Для Каждого ПодсистемаМетаданные Из МетаданныеРодителя.Подсистемы Цикл
		Если Не ПодсистемаМетаданные.ВключатьВКомандныйИнтерфейс Или Не ПравоДоступа("Просмотр", ПодсистемаМетаданные) Или Не БазоваяПодсистемаСервер.ОН_ОбъектМетаданныхДоступенПоФункциональнымОпциям(ПодсистемаМетаданные) Тогда
			Продолжить;
		КонецЕсли;

		СтрокаТаблицы				= ТаблицаПодсистем.Добавить();
		СтрокаТаблицы.ПолноеИмя		= ПодсистемаМетаданные.ПолноеИмя();
		СтрокаТаблицы.Представление	= ПодсистемаМетаданные.Представление();
		СтрокаТаблицы.Ссылка		= Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка();
		ВО_ДобавитьПодсистемы(ТаблицаПодсистем, ПодсистемаМетаданные);
	КонецЦикла;
КонецПроцедуры

Функция ВО_ПравоДобавления() Экспорт
	Возврат ПравоДоступа("СохранениеДанныхПользователя", Метаданные) И ПравоДоступа("Добавление", Метаданные.Справочники.ВариантыОтчетов);
КонецФункции

#КонецОбласти
