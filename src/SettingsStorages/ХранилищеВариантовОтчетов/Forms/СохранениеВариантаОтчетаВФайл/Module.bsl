///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	РасширениеАрхива		= ".zip";
	ИмяФайлаБезРаширения	= "ReportOptions";

	ЗаполнитьОписаниеВариантовОтчетов();
	ПрочитатьПользовательскиеНастройки();

	УстановитьУсловноеОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Обработчик	= Новый ОписаниеОповещения("ПослеУстановкиРасширенияРаботыСФайлами", ЭтотОбъект);
	БазоваяПодсистемаКлиент.ФС_ПодключитьРасширениеДляРаботыСФайлами(Обработчик, ТекстПредложения());
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(ИмяФайла) Тогда
		Возврат;
	КонецЕсли;

	ПроверитьИмяФайла();
	ПроверитьИмяКаталога();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИмяФайла()
	Если ОписаниеВариантовОтчетов.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;

	ОписаниеИмениФайла = СтрРазделить(ИмяФайла, ПолучитьРазделительПути());

	ИмяФайлаКраткое = ОписаниеИмениФайла[ОписаниеИмениФайла.ВГраница()];

	Если НРег(ИмяФайлаКраткое) = РасширениеАрхива Тогда
		ИмяФайлаКраткое										= ИмяФайлаБезРаширения + РасширениеАрхива;
		ОписаниеИмениФайла[ОписаниеИмениФайла.ВГраница()]	= ИмяФайлаКраткое;
		ИмяФайла											= СтрСоединить(ОписаниеИмениФайла, ПолучитьРазделительПути());
	ИначеЕсли Не СтрЗаканчиваетсяНа(НРег(ИмяФайлаКраткое), РасширениеАрхива) Тогда
		ИмяФайлаКраткое										= ИмяФайлаБезРаширения + РасширениеАрхива;
		ОписаниеИмениФайла.Добавить(ИмяФайлаКраткое);
		ИмяФайла											= СтрСоединить(ОписаниеИмениФайла, ПолучитьРазделительПути());
	Иначе
		ИмяФайлаБезРаширения								= СтрЗаменить(ИмяФайлаКраткое, РасширениеАрхива, "");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИмяКаталога()
	Если СтрЗаканчиваетсяНа(НРег(ИмяФайла), РасширениеАрхива) Тогда
		ОписаниеИмениФайла	= СтрРазделить(ИмяФайла, ПолучитьРазделительПути());
		ОписаниеИмениФайла.Удалить(ОписаниеИмениФайла.ВГраница());

		ПутьККаталогу		= СтрСоединить(ОписаниеИмениФайла, ПолучитьРазделительПути());
	Иначе
		ПутьККаталогу		= ИмяФайла;
	КонецЕсли;

	ИмяФайлаПослеВыбораКаталога(ПутьККаталогу, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьКаталог();
КонецПроцедуры

&НаКлиенте
Процедура ИмяКаталогаПриИзменении(Элемент)
	ИмяКаталога = БазоваяПодсистемаКлиентСервер.ОН_ДобавитьКонечныйРазделительПути(ИмяКаталога);
	УстановитьИменаФайлов();
КонецПроцедуры

&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьКаталог();
КонецПроцедуры

&НаКлиенте
Процедура ПользовательскиеНастройкиПриИзменении(Элемент)
	ТекущиеПользовательскиеНастройки = ПользовательскиеНастройки.НайтиПоЗначению(ОписаниеВариантовОтчетов[0].КлючПользовательскихНастроек);
	Если ТекущиеПользовательскиеНастройки <> Неопределено Тогда
		ТекущиеПользовательскиеНастройки.Пометка = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеВариантовОтчетовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеВариантовОтчетовПослеУдаления(Элемент)
	УстановитьИменаФайлов();
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	УпаковатьНастройкиВариантовОтчетов();

	Если Не ЗначениеЗаполнено(ИмяФайла) Тогда
		УстановитьИменаФайлов();
	КонецЕсли;

	Обработчик = Новый ОписаниеОповещения("УпаковатьНастройкиВариантаОтчетаЗавершение", ЭтотОбъект);

	ПараметрыСохранения							= БазоваяПодсистемаКлиент.ФС_КонтекстОперации(РежимДиалогаВыбораФайла.Сохранение);
	ПараметрыСохранения.ТекстПредложения		= ТекстПредложения();
	ПараметрыСохранения.Диалог.Фильтр			= "Архив (*.zip)|*.zip";
	ПараметрыСохранения.Диалог.Заголовок		= "Укажите файл";
	ПараметрыСохранения.Диалог.ПолноеИмяФайла	= ИмяФайла;

	Для Каждого ОписаниеВариантаОтчета Из ОписаниеВариантовОтчетов Цикл
		БазоваяПодсистемаКлиент.ФС_СохранитьФайл(Обработчик, ОписаниеВариантаОтчета.АдресХранилищаАрхива, ОписаниеВариантаОтчета.ИмяФайла, ПараметрыСохранения);
	КонецЦикла;

	Закрыть();
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента		= Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле	= Новый ПолеКомпоновкиДанных(Элементы.ПользовательскиеНастройкиЗначение.Имя);

	ОтборЭлемента					= Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПользовательскиеНастройки.Представление");
	ОтборЭлемента.ВидСравнения		= ВидСравненияКомпоновкиДанных.Содержит;
	ОтборЭлемента.ПравоеЗначение	= "[ЭтоТекущиеНастройки]";

	ШрифтВажнойНадписи = Метаданные.ЭлементыСтиля.ВажнаяНадписьШрифт;
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтВажнойНадписи.Значение);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", ОписаниеВариантовОтчетов[0].ПредставлениеПользовательскихНастроек);

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента		= Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле	= Новый ПолеКомпоновкиДанных(Элементы.ПользовательскиеНастройкиПометка.Имя);

	ОтборЭлемента					= Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ПользовательскиеНастройки.Представление");
	ОтборЭлемента.ВидСравнения		= ВидСравненияКомпоновкиДанных.Содержит;
	ОтборЭлемента.ПравоеЗначение	= "[ЭтоТекущиеНастройки]";

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОписаниеВариантовОтчетов()
	Если Параметры.Свойство("ВыбранныеВариантыОтчетов") Тогда
		ДанныеВариантовОтчетов = БазоваяПодсистемаСервер.ОН_ЗначенияРеквизитовОбъектов(Параметры.ВыбранныеВариантыОтчетов, "Отчет, КлючВарианта, Представление, Настройки, ТипОтчета");

		Для Каждого ДанныеВариантаОтчета Из ДанныеВариантовОтчетов Цикл
			ЗаполнитьОписаниеВариантаОтчета(ДанныеВариантаОтчета.Ключ,ДанныеВариантаОтчета.Значение);
		КонецЦикла;
	Иначе
		ОписаниеВариантаОтчета = ОписаниеВариантовОтчетов.Добавить();
		ЗаполнитьЗначенияСвойств(ОписаниеВариантаОтчета, Параметры);
	КонецЕсли;

	Если ОписаниеВариантовОтчетов.Количество() > 1 Тогда
		Элементы.ВариантыСохранения.ТекущаяСтраница = Элементы.НесколькоВариантовОтчетов;
		Заголовок = "Сохранение вариантов отчетов в файл";
	Иначе
		Элементы.ВариантыСохранения.ТекущаяСтраница = Элементы.ОдинВариантОтчета;
		Заголовок = "Сохранение варианта отчета в файл";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОписаниеВариантаОтчета(ВариантОтчета, ДанныеВариантаОтчета)
	Если ДанныеВариантаОтчета.ТипОтчета = Перечисления.ТипыОтчетов.Дополнительный Тогда
		Возврат;
	КонецЕсли;

	ОписаниеВариантаОтчета			= ОписаниеВариантовОтчетов.Добавить();
	ОписаниеВариантаОтчета.Ссылка	= ВариантОтчета;

	МетаданныеОтчета					= Справочники.ИдентификаторыОбъектовМетаданных.ОбъектМетаданныхПоИдентификатору(ДанныеВариантаОтчета.Отчет, Истина);
	ОписаниеВариантаОтчета.ИмяОтчета	= МетаданныеОтчета.ПолноеИмя();

	ОписаниеВариантаОтчета.КлючВарианта				= ДанныеВариантаОтчета.КлючВарианта;
	ОписаниеВариантаОтчета.ПредставлениеВарианта	= ДанныеВариантаОтчета.Представление;

	КлючОбъекта = ОписаниеВариантаОтчета.ИмяОтчета + "/" + ОписаниеВариантаОтчета.КлючВарианта + "/" + "КлючТекущихПользовательскихНастроек";

	Отбор	= Новый Структура("КлючОбъекта, Пользователь", КлючОбъекта, ИмяПользователя());
	Выборка = ХранилищеСистемныхНастроек.Выбрать(Отбор);
	Если Выборка.Следующий() Тогда
		ОписаниеВариантаОтчета.КлючПользовательскихНастроек = Выборка.Настройки;
	КонецЕсли;

	ОписаниеВариантаОтчета.Настройки = ДанныеВариантаОтчета.Настройки.Получить();
	Если ОписаниеВариантаОтчета.Настройки <> Неопределено Тогда
		Возврат;
	КонецЕсли;

	Отчет = ВариантыОтчетовСервер.О_ОтчетОбъект(ОписаниеВариантаОтчета.ИмяОтчета);

	ОписаниеВариантаОтчета.Настройки	= Отчет.СхемаКомпоновкиДанных.ВариантыНастроек[ОписаниеВариантаОтчета.КлючВарианта].Настройки;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПользовательскиеНастройки()
	Если ОписаниеВариантовОтчетов.Количество() <> 1 Тогда
		Возврат;
	КонецЕсли;

	ОписаниеВариантаОтчета = ОписаниеВариантовОтчетов[0];

	КлючОбъекта	= ОписаниеВариантаОтчета.ИмяОтчета + "/" + ОписаниеВариантаОтчета.КлючВарианта;
	Отбор		= Новый Структура("КлючОбъекта, Пользователь", КлючОбъекта, ИмяПользователя());

	Выборка = ХранилищеПользовательскихНастроекОтчетов.Выбрать(Отбор);
	Пока Выборка.Следующий() Цикл
		ПользовательскиеНастройки.Добавить(Выборка.КлючНастроек, Выборка.Представление);
		ЗаполнитьЗначенияСвойств(ХранилищеПользовательскихНастроек.Добавить(), Выборка);
	КонецЦикла;

	ТекущиеПользовательскиеНастройки = ПользовательскиеНастройки.НайтиПоЗначению(ОписаниеВариантаОтчета.КлючПользовательскихНастроек);
	Если ТекущиеПользовательскиеНастройки = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ОписаниеВариантаОтчета.ПредставлениеПользовательскихНастроек) Тогда
		ОписаниеВариантаОтчета.ПредставлениеПользовательскихНастроек = ТекущиеПользовательскиеНастройки.Представление;
	КонецЕсли;

	ТекущиеПользовательскиеНастройки.Пометка		= Истина;
	ТекущиеПользовательскиеНастройки.Представление	= ТекущиеПользовательскиеНастройки.Представление + " [ЭтоТекущиеНастройки]";

	Индекс = ПользовательскиеНастройки.Индекс(ТекущиеПользовательскиеНастройки);
	Если Индекс > 0 Тогда
		ПользовательскиеНастройки.Сдвинуть(ТекущиеПользовательскиеНастройки, -Индекс);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПослеВыбораКаталога(ПутьККаталогу, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(ПутьККаталогу) Тогда
		ИмяКаталога = БазоваяПодсистемаКлиентСервер.ОН_ДобавитьКонечныйРазделительПути(ПутьККаталогу);
		УстановитьИменаФайлов();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УпаковатьНастройкиВариантовОтчетов()
	Для Каждого ОписаниеВариантаОтчета Из ОписаниеВариантовОтчетов Цикл
		УпаковатьНастройкиВариантаОтчета(ОписаниеВариантаОтчета);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УпаковатьНастройкиВариантаОтчета(ОписаниеВариантаОтчета)
	ИмяВременногоКаталога = БазоваяПодсистемаСервер.ФС_СоздатьВременныйКаталог();

	Если Не ЗначениеЗаполнено(ИмяВременногоКаталога) Тогда
		Возврат;
	КонецЕсли;

	ИмяВременногоКаталога	= БазоваяПодсистемаКлиентСервер.ОН_ДобавитьКонечныйРазделительПути(ИмяВременногоКаталога);
	ИмяФайлаАрхива			= ПолучитьИмяВременногоФайла("zip");

	Архив = Новый ЗаписьZipФайла(ИмяФайлаАрхива);

	ДобавитьНастройкиВАрхив(Архив, ОписаниеВариантаОтчета.Настройки, ИмяВременногоКаталога, "Settings");
	ДобавитьОписаниеНастроекВАрхив(Архив, ИмяВременногоКаталога, ОписаниеВариантаОтчета);

	Счетчик	= 0;
	Поиск	= Новый Структура("КлючНастроек");

	Для Каждого ЭлементСписка Из ПользовательскиеНастройки Цикл
		Если Не ЭлементСписка.Пометка Тогда
			Продолжить;
		КонецЕсли;

		Счетчик				= Счетчик + 1;
		Поиск.КлючНастроек 	= ЭлементСписка.Значение;

		НайденныеНастройки = ХранилищеПользовательскихНастроек.НайтиСтроки(Поиск);
		ДобавитьНастройкиВАрхив(Архив, НайденныеНастройки[0].Настройки, ИмяВременногоКаталога, "UserSettings", Счетчик);
	КонецЦикла;

	Архив.Записать();

	ДвоичныеДанные								= Новый ДвоичныеДанные(ИмяФайлаАрхива);
	ОписаниеВариантаОтчета.АдресХранилищаАрхива	= ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);

	БазоваяПодсистемаСервер.ФС_УдалитьВременныйКаталог(ИмяВременногоКаталога);
	БазоваяПодсистемаСервер.ФС_УдалитьВременныйФайл(ИмяФайлаАрхива);
КонецПроцедуры

&НаКлиенте
Процедура УпаковатьНастройкиВариантаОтчетаЗавершение(Файлы, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Файлы) <> Тип("Массив") Или Файлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Если ОписаниеВариантовОтчетов.Количество() = 1 Тогда
		Пояснение = ИмяФайла;
	Иначе
		Пояснение = ИмяКаталога;
	КонецЕсли;

	ПоказатьОповещениеПользователя("Вариант отчета сохранен в файл",, Пояснение);
КонецПроцедуры

&НаСервере
Процедура ДобавитьНастройкиВАрхив(Архив, Настройки, ИмяВременногоКаталога, ТипНастроек, Суффикс = Неопределено)
	ИмяФайлаНастроек = ИмяВременногоКаталога + ТипНастроек + ?(Суффикс = Неопределено, "", Суффикс) + ".xml";

	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ИмяФайлаНастроек);

	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Настройки, НазначениеТипаXML.Явное);

	ЗаписьXML.Закрыть();

	Архив.Добавить(ИмяФайлаНастроек);
КонецПроцедуры

&НаСервере
Процедура ДобавитьОписаниеНастроекВАрхив(Архив, ИмяВременногоКаталога, ОписаниеВариантаОтчета)
	ИмяФайлаОписанияНастроек = ИмяВременногоКаталога + "SettingsDescription.xml";

	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ИмяФайлаОписанияНастроек);

	ЗаписьXML.ЗаписатьНачалоЭлемента("SettingsDescription");

	ЗаписьXML.ЗаписатьАтрибут("ReportName",		ОписаниеВариантаОтчета.ИмяОтчета);

	ЗаписьXML.ЗаписатьНачалоЭлемента("Settings");

	ЗаписьXML.ЗаписатьАтрибут("Key",			ОписаниеВариантаОтчета.КлючВарианта);
	ЗаписьXML.ЗаписатьАтрибут("Presentation",	ОписаниеВариантаОтчета.ПредставлениеВарианта);

	ЗаписьXML.ЗаписатьКонецЭлемента(); // <Settings>

	Для Каждого ЭлементСписка Из ПользовательскиеНастройки Цикл
		Если Не ЭлементСписка.Пометка Тогда
			Продолжить;
		КонецЕсли;

		ПредставлениеНастройки	= СокрЛП(СтрЗаменить(ЭлементСписка.Представление, "[ЭтоТекущиеНастройки]", ""));
		ЭтоТекущиеНастройки		= ПредставлениеНастройки = ОписаниеВариантовОтчетов[0].ПредставлениеПользовательскихНастроек;

		ЗаписьXML.ЗаписатьНачалоЭлемента("UserSettings");

		ЗаписьXML.ЗаписатьАтрибут("Key", ЭлементСписка.Значение);
		ЗаписьXML.ЗаписатьАтрибут("Presentation", ПредставлениеНастройки);
		ЗаписьXML.ЗаписатьАтрибут("isCurrent", XMLСтрока(ЭтоТекущиеНастройки));

		ЗаписьXML.ЗаписатьКонецЭлемента(); // <UserSettings>
	КонецЦикла;

	ЗаписьXML.ЗаписатьКонецЭлемента(); // <SettingsDescription>
	ЗаписьXML.Закрыть();

	Архив.Добавить(ИмяФайлаОписанияНастроек);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКаталог()
	БазоваяПодсистемаКлиент.ФС_ВыбратьКаталог(Новый ОписаниеОповещения("ИмяФайлаПослеВыбораКаталога", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ПослеУстановкиРасширенияРаботыСФайлами(РасширениеПодключено, ДополнительныеПараметры) Экспорт
	Если РасширениеПодключено = Истина Тогда
		Обработчик = Новый ОписаниеОповещения("ПослеПолученияКаталогаДокументов", ЭтотОбъект);
		НачатьПолучениеКаталогаДокументов(Обработчик);
	ИначеЕсли Не ЗначениеЗаполнено(ИмяФайла) Тогда
		УстановитьИменаФайлов();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияКаталогаДокументов(ИмяКаталогаДокументов, ДополнительныеПараметры) Экспорт
	Если Не ЗначениеЗаполнено(ИмяКаталогаДокументов) Тогда
		Возврат;
	КонецЕсли;

	Если ОписаниеВариантовОтчетов.Количество() > 1 Тогда
		ИмяКаталога = БазоваяПодсистемаКлиентСервер.ОН_ДобавитьКонечныйРазделительПути(СтрШаблон("%1ReportsOptions", ИмяКаталогаДокументов));
	Иначе
		ИмяКаталога = ИмяКаталогаДокументов;
	КонецЕсли;

	УстановитьИменаФайлов();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИменаФайлов()
	КоличествоВариантовОтчетов = ОписаниеВариантовОтчетов.Количество();

	Если КоличествоВариантовОтчетов = 0 Тогда
		Возврат;
	КонецЕсли;

	Для НомерВариантаОтчета = 1 По КоличествоВариантовОтчетов Цикл
		ОписаниеВариантаОтчета			= ОписаниеВариантовОтчетов[НомерВариантаОтчета - 1];
		ОписаниеВариантаОтчета.ИмяФайла = ИмяКаталога + ИмяФайлаБезРаширения + ?(ОписаниеВариантовОтчетов.Количество() = 1, "", НомерВариантаОтчета) + РасширениеАрхива;

		ОписаниеВариантаОтчета.ИмяФайлаКраткое = СтрЗаменить(ОписаниеВариантаОтчета.ИмяФайла, ИмяКаталога, "");
	КонецЦикла;

	ИмяФайла = ОписаниеВариантовОтчетов[0].ИмяФайла;
КонецПроцедуры

&НаКлиенте
Функция ТекстПредложения()
	Возврат "Для сохранения варианта отчета в файл рекомендуется
		|установить расширение для работы с файлами.";
КонецФункции
