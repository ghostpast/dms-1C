///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


Процедура ОбработкаЗагрузки(КлючОтчета, КлючВарианта, Настройки, ОписаниеНастроек, Пользователь)
	Если Не ПравоДоступа("Чтение", Метаданные.Справочники.ВариантыОтчетов) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(КлючОтчета) = Тип("Строка") Тогда
		ОтчетИнформация	= ВариантыОтчетовСервер.ВО_ИнформацияОбОтчете(КлючОтчета, Истина);
		ОтчетСсылка		= ОтчетИнформация.Отчет;
	Иначе
		ОтчетСсылка = КлючОтчета;
	КонецЕсли;

	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ВариантыОтчетов.Представление,
	|	ВариантыОтчетов.Настройки
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.Отчет = &Отчет
	|	И ВариантыОтчетов.КлючВарианта = &КлючВарианта";

	Запрос.УстановитьПараметр("Отчет",        ОтчетСсылка);
	Запрос.УстановитьПараметр("КлючВарианта", КлючВарианта);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если ОписаниеНастроек = Неопределено Тогда
			ОписаниеНастроек				= Новый ОписаниеНастроек;
			ОписаниеНастроек.КлючОбъекта	= КлючОтчета;
			ОписаниеНастроек.КлючНастроек	= КлючВарианта;
			ОписаниеНастроек.Пользователь	= Пользователь;
		КонецЕсли;
		ОписаниеНастроек.Представление = Выборка.Представление;
		Настройки = Выборка.Настройки.Получить();
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаСохранения(КлючОтчета, КлючВарианта, Настройки, ОписаниеНастроек, Пользователь)
	Если Не (ПравоДоступа("СохранениеДанныхПользователя", Метаданные) И ПравоДоступа("Добавление", Метаданные.Справочники.ВариантыОтчетов)) Тогда
		ВызватьИсключение "Недостаточно прав для сохранения вариантов отчетов";
	КонецЕсли;

	ОтчетИнформация = ВариантыОтчетовСервер.ВО_ИнформацияОбОтчете(КлючОтчета, Истина);

	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВариантыОтчетов.Ссылка
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК ВариантыОтчетов
	|ГДЕ
	|	ВариантыОтчетов.Отчет = &Отчет
	|	И ВариантыОтчетов.КлючВарианта = &КлючВарианта";

	Запрос.УстановитьПараметр("Отчет",        ОтчетИнформация.Отчет);
	Запрос.УстановитьПараметр("КлючВарианта", КлючВарианта);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	СсылкаВарианта = Выборка.Ссылка;

	НачатьТранзакцию();
	Попытка
		Блокировка			= Новый БлокировкаДанных;
		ЭлементБлокировки	= Блокировка.Добавить(Метаданные.Справочники.ВариантыОтчетов.ПолноеИмя());
		ЭлементБлокировки.УстановитьЗначение("Ссылка", СсылкаВарианта);
		Блокировка.Заблокировать();

		ВариантОбъект = СсылкаВарианта.ПолучитьОбъект();

		Если ТипЗнч(Настройки) = Тип("НастройкиКомпоновкиДанных") Тогда
			Адрес = БазоваяПодсистемаКлиентСервер.ОН_СвойствоСтруктуры(Настройки.ДополнительныеСвойства, "Адрес");
			Если ТипЗнч(Адрес) = Тип("Строка") И ЭтоАдресВременногоХранилища(Адрес) Тогда
				Настройки = ПолучитьИзВременногоХранилища(Адрес);
			КонецЕсли;

			Контекст = БазоваяПодсистемаКлиентСервер.ОН_СвойствоСтруктуры(Настройки.ДополнительныеСвойства, "КонтекстВарианта");
			Если ЗначениеЗаполнено(Контекст) Тогда
				ВариантОбъект.Контекст = Контекст;
			КонецЕсли;
		КонецЕсли;

		ВариантОбъект.Настройки = Новый ХранилищеЗначения(Настройки);

		Если ОписаниеНастроек <> Неопределено Тогда
			ВариантОбъект.Наименование = ОписаниеНастроек.Представление;
		КонецЕсли;

		ВариантОбъект.Записать();

		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();

		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры

Процедура ОбработкаПолученияОписания(КлючОтчета, КлючВарианта, ОписаниеНастроек, Пользователь)
	Если Не ПравоДоступа("Чтение", Метаданные.Справочники.ВариантыОтчетов) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(КлючОтчета) = Тип("Строка") Тогда
		ОтчетИнформация = ВариантыОтчетовСервер.ВО_ИнформацияОбОтчете(КлючОтчета, Истина);
		ОтчетСсылка = ОтчетИнформация.Отчет;
	Иначе
		ОтчетСсылка = КлючОтчета;
	КонецЕсли;

	Если ОписаниеНастроек = Неопределено Тогда
		ОписаниеНастроек = Новый ОписаниеНастроек;
	КонецЕсли;

	ОписаниеНастроек.КлючОбъекта  = КлючОтчета;
	ОписаниеНастроек.КлючНастроек = КлючВарианта;

	Если ТипЗнч(Пользователь) = Тип("Строка") Тогда
		ОписаниеНастроек.Пользователь = Пользователь;
	КонецЕсли;

	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Варианты.Представление,
	|	Варианты.ПометкаУдаления,
	|	Варианты.Пользовательский
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК Варианты
	|ГДЕ
	|	Варианты.Отчет = &Отчет
	|	И Варианты.КлючВарианта = &КлючВарианта";

	Запрос.УстановитьПараметр("Отчет",        ОтчетСсылка);
	Запрос.УстановитьПараметр("КлючВарианта", КлючВарианта);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ОписаниеНастроек.Представление = Выборка.Представление;
		ОписаниеНастроек.ДополнительныеСвойства.Вставить("ПометкаУдаления",		Выборка.ПометкаУдаления);
		ОписаниеНастроек.ДополнительныеСвойства.Вставить("Пользовательский",	Выборка.Пользовательский);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУстановкиОписания(КлючОтчета, КлючВарианта, ОписаниеНастроек, Пользователь)
	Если Не (ПравоДоступа("СохранениеДанныхПользователя", Метаданные) И ПравоДоступа("Добавление", Метаданные.Справочники.ВариантыОтчетов)) Тогда
		ВызватьИсключение "Недостаточно прав для сохранения вариантов отчетов";
	КонецЕсли;

	Если ТипЗнч(КлючОтчета) = Тип("Строка") Тогда
		ОтчетИнформация = ВариантыОтчетовСервер.ВО_ИнформацияОбОтчете(КлючОтчета, Истина);
		ОтчетСсылка = ОтчетИнформация.Отчет;
	Иначе
		ОтчетСсылка = КлючОтчета;
	КонецЕсли;

	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Варианты.Ссылка
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК Варианты
	|ГДЕ
	|	Варианты.Отчет = &Отчет
	|	И Варианты.КлючВарианта = &КлючВарианта";

	Запрос.УстановитьПараметр("Отчет",        ОтчетСсылка);
	Запрос.УстановитьПараметр("КлючВарианта", КлючВарианта);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	СсылкаВарианта = Выборка.Ссылка;

	НачатьТранзакцию();
	Попытка
		Блокировка			= Новый БлокировкаДанных;
		ЭлементБлокировки	= Блокировка.Добавить(Метаданные.Справочники.ВариантыОтчетов.ПолноеИмя());
		ЭлементБлокировки.УстановитьЗначение("Ссылка", СсылкаВарианта);
		Блокировка.Заблокировать();

		ВариантОбъект				= СсылкаВарианта.ПолучитьОбъект();
		ВариантОбъект.Наименование	= ОписаниеНастроек.Представление;
		ВариантОбъект.Записать();

		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();

		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры

#КонецЕсли

Функция ПолучитьСписок(КлючОтчета, Знач Пользователь = Неопределено) Экспорт // АПК:307 Является аналогом метода стандартного хранилища настроек
	Список = Новый СписокЗначений;

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	ВариантыОтчетовАвтора = ВариантыОтчетовАвтора(КлючОтчета, Пользователь);

	Если ВариантыОтчетовАвтора <> Неопределено Тогда
		Для Каждого Строка Из ВариантыОтчетовАвтора Цикл
			Список.Добавить(Строка.КлючВарианта, Строка.Наименование);
		КонецЦикла;
	КонецЕсли;

#КонецЕсли

	Возврат Список;
КонецФункции

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ВариантыОтчетовАвтора(КлючОтчета, Автор)
	Если ТипЗнч(КлючОтчета) = Тип("Строка") Тогда
		ОтчетИнформация = ВариантыОтчетовСервер.ВО_ИнформацияОбОтчете(КлючОтчета, Истина);
		Отчет = ОтчетИнформация.Отчет;
	Иначе
		Отчет = КлючОтчета;
	КонецЕсли;

	Запрос			= Новый Запрос;
	Запрос.Текст	=
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Варианты.КлючВарианта,
	|	Варианты.Наименование
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК Варианты
	|ГДЕ
	|	Варианты.Отчет = &Отчет
	|	И Варианты.Автор = &Автор
	|	И Варианты.Автор.ИдентификаторПользователяИБ = &GUID
	|	И НЕ Варианты.ПометкаУдаления
	|	И Варианты.Пользовательский";

	Запрос.УстановитьПараметр("Отчет", Отчет);

	Если Автор = "" Тогда
		Автор = ПользователиСервер.П_СсылкаНеуказанногоПользователя();
	ИначеЕсли Автор = Неопределено Тогда
		Автор = ПользователиСервер.сП_АвторизованныйПользователь();
	КонецЕсли;

	Если ТипЗнч(Автор) = Тип("СправочникСсылка.Пользователи") Тогда
		Запрос.УстановитьПараметр("Автор", Автор);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Варианты.Автор.ИдентификаторПользователяИБ = &GUID", "");
	Иначе
		Если ТипЗнч(Автор) = Тип("УникальныйИдентификатор") Тогда
			ИдентификаторПользователя = Автор;
		Иначе
			Если ТипЗнч(Автор) = Тип("Строка") Тогда
				УстановитьПривилегированныйРежим(Истина);
				ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(Автор);
				УстановитьПривилегированныйРежим(Ложь);

				Если ПользовательИБ = Неопределено Тогда
					Возврат Неопределено;
				КонецЕсли;
			ИначеЕсли ТипЗнч(Автор) = Тип("ПользовательИнформационнойБазы") Тогда
				ПользовательИБ = Автор;
			Иначе
				Возврат Неопределено;
			КонецЕсли;

			ИдентификаторПользователя = ПользовательИБ.УникальныйИдентификатор;
		КонецЕсли;

		Запрос.УстановитьПараметр("GUID", ИдентификаторПользователя);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Варианты.Автор = &Автор", "");
	КонецЕсли;

	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

#КонецЕсли

Процедура Удалить(КлючОтчета, КлючВарианта, Знач Пользователь) Экспорт
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Запрос			= Новый Запрос;
	Запрос.Текст	=
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Варианты.Ссылка
	|ИЗ
	|	Справочник.ВариантыОтчетов КАК Варианты
	|ГДЕ
	|	Варианты.Отчет = &Отчет
	|	И Варианты.Автор = &Автор
	|	И Варианты.Автор.ИдентификаторПользователяИБ = &GUID
	|	И Варианты.КлючВарианта = &КлючВарианта
	|	И НЕ Варианты.ПометкаУдаления
	|	И Варианты.Пользовательский";

	Если КлючОтчета = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Варианты.Отчет = &Отчет", "ИСТИНА");
	Иначе
		ОтчетИнформация = ВариантыОтчетовСервер.ВО_ИнформацияОбОтчете(КлючОтчета, Истина);
		Запрос.УстановитьПараметр("Отчет", ОтчетИнформация.Отчет);
	КонецЕсли;

	Если КлючВарианта = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Варианты.КлючВарианта = &КлючВарианта", "");
	Иначе
		Запрос.УстановитьПараметр("КлючВарианта", КлючВарианта);
	КонецЕсли;

	Если Пользователь = "" Тогда
		Пользователь = ПользователиСервер.П_СсылкаНеуказанногоПользователя();
	КонецЕсли;

	Если Пользователь = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Варианты.Автор = &Автор", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Варианты.Автор.ИдентификаторПользователяИБ = &GUID", "");
	ИначеЕсли ТипЗнч(Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		Запрос.УстановитьПараметр("Автор", Пользователь);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Варианты.Автор.ИдентификаторПользователяИБ = &GUID", "");
	Иначе
		Если ТипЗнч(Пользователь) = Тип("УникальныйИдентификатор") Тогда
			ИдентификаторПользователя = Пользователь;
		Иначе
			Если ТипЗнч(Пользователь) = Тип("Строка") Тогда
				УстановитьПривилегированныйРежим(Истина);
				ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(Пользователь);
				УстановитьПривилегированныйРежим(Ложь);
				Если ПользовательИБ = Неопределено Тогда
					Возврат;
				КонецЕсли;
			ИначеЕсли ТипЗнч(Пользователь) = Тип("ПользовательИнформационнойБазы") Тогда
				ПользовательИБ = Пользователь;
			Иначе
				Возврат;
			КонецЕсли;
			ИдентификаторПользователя = ПользовательИБ.УникальныйИдентификатор;
		КонецЕсли;
		Запрос.УстановитьПараметр("GUID", ИдентификаторПользователя);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Варианты.Автор = &Автор", "");
	КонецЕсли;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ВариантОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВариантОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
#КонецЕсли
КонецПроцедуры

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ДобавитьВариантыВнешнегоОтчета(ВариантыОтчета, ПолноеИмяОтчета, ИмяОтчета) Экспорт
	Попытка
		ОтчетОбъект = ВариантыОтчетовСервер.О_ОтчетОбъект(ПолноеИмяОтчета);
	Исключение
		ШаблонСообщения	= "Не удалось получить список предопределенных вариантов внешнего отчета ""%1"":%2%3";
		Сообщение		= СтрШаблон(ШаблонСообщения, ИмяОтчета, Символы.ПС, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВариантыОтчетовСервер.ВО_ЗаписатьВЖурнал(УровеньЖурналаРегистрации.Ошибка, Сообщение, ПолноеИмяОтчета);

		Возврат Ложь;
	КонецПопытки;

	Если ОтчетОбъект.СхемаКомпоновкиДанных = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;

	Для Каждого ВариантНастроекКД Из ОтчетОбъект.СхемаКомпоновкиДанных.ВариантыНастроек Цикл
		Вариант								= ВариантыОтчета.Добавить();
		Вариант.Пользовательский			= Ложь;
		Вариант.Наименование				= ВариантНастроекКД.Представление;
		Вариант.КлючВарианта				= ВариантНастроекКД.Имя;
		Вариант.ТолькоДляАвтора				= Ложь;
		Вариант.АвторТекущийПользователь	= Ложь;
		Вариант.Порядок						= 1;
		Вариант.ИндексКартинки				= 5;
	КонецЦикла;
	Возврат Истина;
КонецФункции

#КонецЕсли
